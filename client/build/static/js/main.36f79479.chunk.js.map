{"version":3,"sources":["components/Authn/FirstComponent.js","components/Authn/SignupComponent.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreator.js","components/Authn/MainComponent.js","components/User/HeaderComponent.js","components/User/FooterComponent.js","components/User/HomeComponent.js","components/User/ComplainComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/User/ConverseComponent.js","redux/ActionCreator2.js","redux/ActionCreator3.js","components/User/Main2Component.js","components/Employee/Home2Component.js","components/Employee/HeaderComponent.js","components/Employee/FooterComponent.js","components/LoadingComponent.js","components/Employee/ResolveComponent.js","components/Employee/Main3Component.js","redux/reducers/userlogin.js","redux/reducers/adminlogin.js","redux/reducers/userregister.js","redux/reducers/departments.js","redux/reducers/profile.js","redux/reducers/dashboard.js","redux/reducers/raised.js","redux/reducers/pending.js","redux/reducers/resolved.js","redux/reducers/reply.js","App.js","redux/configStore.js","reportWebVitals.js","index.js"],"names":["required","val","length","validEmail","email","test","CardView1","props","Card","className","style","borderRadius","CardBody","body","inverse","CardTitle","CardText","Button","color","onClick","toggleModal1","to","CardView2","toggleModal2","First","state","isOpen1","isOpen2","bind","this","setState","values","userLogin","password","adminLogin","empid","uisLogin","cookies","Cookies","userid","udata","set","path","window","location","reload","href","aisLogin","adata","emp_id","deptid","dept_id","Modal","isOpen","toggle","ModalHeader","tag","ModalBody","onSubmit","handleSubmit1","Row","Label","htmlFor","md","InputGroup","width","text","model","name","placeholder","validators","InputGroupAddon","addonType","InputGroupText","show","messages","type","ButtonGroup","height","outline","marginLeft","handleSubmit2","addon","Component","minLength","len","maxLength","isNumber","isNaN","Signup","otp","handleSubmit","cpassword","generateOTP","firstname","lastname","toggleModal","alert","fname","lname","OTP","i","Math","floor","random","console","log","msg","emailjs","send","message","reply_to","to_name","then","err","registerUser","aadharno","phoneno","isRegister","Col","CardHeader","size","offset","id","check","checkbox","handleSubmitVerify","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","ADMIN_LOGIN_SUCCESS","ADMIN_LOGIN_FAILED","REGISTER_SUCCESS","ADD_DEPARTMENTS","ADD_PROFILE","ADD_PROFILE_ERR","ADD_EMP_PROFILE","ADD_EMP_PROFILE_ERR","ADD_USER_DASH","ADD_EMP_DASH","ADD_RAISED","ERR_RAISED","ADD_PENDING","ERR_PENDING","ADD_RESOLVED","ERR_RESOLVED","ADD_RECEIVED","ERR_RECEIVED","ADD_EMP_RESOLVED","ERR_EMP_RESOLVED","ADD_USER_REPLY","ADD_EMP_REPLY","baseUrl","process","APP_URL","userLoginSuccess","res","ActionTypes","payload","userLoginFailed","adminLoginSuccess","adminLoginFailed","registerSuccess","registerFailed","addDepartments","addProfile","addProfileErr","addEmpProfile","addEmpProfileErr","Main","Navbar","dark","expand","NavbarBrand","fontFamily","src","weight","alt","renderHeader","component","userlogin","isLogin","uerrMess","errMess","data","adminlogin","aerrMess","renderFooter","withRouter","connect","userregister","dispatch","uname","pwd","user","fetch","method","JSON","stringify","headers","credentials","ok","error","Error","status","statusText","response","json","catch","eid","emp","aadhar","mobile","newUser","joined","Date","toISOString","Header","confirm","remove","Nav","navbar","NavItem","logOut","renderNav","renderModal","Footer","mimetypes","require","Home","activeKey","openModal","fetched","handleClick","byDefault","key","opacity","sub","issueid","issue","Intl","DateTimeFormat","day","month","year","hour","minute","second","format","date","toggleFileViewer","proof","contentClassName","overflow","fileType","extension","filePath","toUpperCase","isErr","ListGroup","map","ListGroupItem","active","margin","ListGroupItemHeading","Badge","ListGroupItemText","Jumbotron","fontSize","dash","raised","resolved","pending","suggested","Tab","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","renderList","raisedData","raisedErr","raisedErrMess","renderData","resolvedData","resolvedErr","resolvedErrMess","pendingData","pendingErr","pendingErrMess","Complain","service","selectedFile","checked","handleChange","selectFile","onCheck","event","target","value","files","generateID","fdata","FormData","append","get","dept","postComplaint","onChange","select","dpt","textarea","rows","hidden","file","disabled","showDetails","Table","ModalFooter","handleFinalSubmit","Contact","About","textAlign","Converse","postUserReply","comment","setInterval","fetchReply","flag","handleWithdraw","borderRight","reply","closed","overflowY","convers","conv","backgroundColor","history","back","goBack","handleFinal","renderLeft","renderRight","addUserDash","addEmpDash","addRaised","errRaised","addPending","errPending","addResolved","errResolved","addReceived","errReceived","addEmpResolved","errEmpResolved","fetchUserReply","obj","addUserReply","fetchEmpReply","addEmpReply","Main2","fetchDepartments","fetchProfile","userDash","fetchRaised","fetchPending","fetchResolved","profile","userdash","departments","exact","match","filter","params","re","userreply","uid","issid","Home2","received","receivedData","isReceivedErr","receivedErrMess","isResolvedErr","position","Loading","Resolve","render","postEmpReply","handleResolve","handleIgnore","handleSuggested","Main3","fetchEmpProfile","empDash","fetchReceived","fetchEmpResolved","empdash","empresolved","empreply","did","UserLogin","action","AdminLogin","UserRegister","Departments","Profile","UserDash","EmpDash","Raised","Received","Pending","Resolved","EmpResolved","UserReply","EmpReply","store","createStore","combineReducers","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36f79479.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardBody, CardTitle, CardText, Button, Modal, ModalBody, ModalHeader, Label,\r\n        Row, InputGroup, InputGroupAddon, InputGroupText, ButtonGroup  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst required = (val) => (val) && (val.length);\r\nconst validEmail = (email) => {\r\n   return !(email) || /^[A-Za-z0-9._%+-]+@[A-za-z0-9.-]+\\.[A-Za-z]{2,4}$/i.test(email)\r\n};\r\n\r\n\r\nfunction CardView1(props){\r\n    return(\r\n       <>\r\n          <Card className='mr-2 p-3 cview' style={{borderRadius: '18px'}}>\r\n                <CardBody body inverse>\r\n                    <CardTitle><b>User Login</b></CardTitle>\r\n                    <CardText>For Users and People</CardText>\r\n                    \r\n                    \r\n                    <div className='row row-content mt-4 px-2'>\r\n\r\n                        <Button color='primary' className='col-auto text-white' style={{'border-radius': '20px'}} \r\n                            onClick={() => props.toggleModal1()}>\r\n                            Click Here\r\n                        </Button>\r\n                    \r\n                    \r\n                        <div className='col-7 py-2 pl-5'>\r\n                            New User ? <Link to='/first/signup'>Register Here </Link> \r\n                        </div>\r\n                    </div>\r\n                </CardBody>\r\n         </Card>\r\n       </>\r\n    );\r\n}\r\n\r\nfunction CardView2(props){\r\n    return(\r\n      <>\r\n         <Card className='ml-2 p-3 cview' style={{borderRadius: '18px'}}>\r\n            <CardBody body inverse>\r\n                <CardTitle><b>Admin Login</b></CardTitle>\r\n                <CardText>For Officials</CardText>\r\n                \r\n                <div className='row row-content mt-4 px-2'>\r\n                    <Button color='success' className='col-auto text-white' style={{'border-radius': '20px'}} \r\n                        onClick={() => props.toggleModal2()}>\r\n                        Click Here\r\n                    </Button>\r\n                </div>\r\n            </CardBody>\r\n         </Card>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nclass First extends Component\r\n{\r\n    constructor(props){\r\n        super(props);     \r\n        \r\n        this.state = {\r\n            isOpen1: false,\r\n            isOpen2: false\r\n         };\r\n         this.toggleModal1 = this.toggleModal1.bind(this);\r\n         this.toggleModal2 = this.toggleModal2.bind(this);\r\n     }\r\n \r\n     toggleModal1()\r\n     {\r\n         this.setState({\r\n             isOpen1: !this.state.isOpen1\r\n         });\r\n     }\r\n \r\n     toggleModal2()\r\n     {\r\n         this.setState({\r\n             isOpen2: !this.state.isOpen2\r\n         });\r\n     }\r\n \r\n \r\n     handleSubmit1(values)\r\n     {\r\n         this.props.userLogin(values.email, values.password);\r\n     }\r\n \r\n     handleSubmit2(values)\r\n     {\r\n        this.props.adminLogin(values.empid, values.password);\r\n     }\r\n\r\n    render()\r\n    {\r\n        if(this.props.uisLogin === true)\r\n        {\r\n            const cookies = new Cookies();\r\n            const userid = this.props.udata[0].email;\r\n            cookies.set('userid', userid, { path: '/'});\r\n\r\n            window.location.reload();\r\n            window.location.href = '/user/home'; \r\n            return;       \r\n         \r\n        }\r\n\r\n        else if(this.props.aisLogin === true)\r\n        {\r\n                const cookies = new Cookies();\r\n               // alert(JSON.stringify(this.props.adata));\r\n                const empid = this.props.adata[0].emp_id;\r\n                const deptid = this.props.adata[0].dept_id;\r\n\r\n                cookies.set('empid', empid, { path: '/'});\r\n                cookies.set('deptid', deptid, { path: '/'});\r\n\r\n                window.location.reload();\r\n                window.location.href = '/emp/home';\r\n                return;\r\n        }\r\n       \r\n        else \r\n        {\r\n         return(\r\n\r\n           <div className='container first p-5'>\r\n\r\n               <div className='row justify-content-center'>\r\n                   <h2 className='col-auto'>Welcome to Third Eye !</h2>\r\n               </div>\r\n     \r\n               <div className='justify-content-center mt-5'>\r\n                   <h4 className='col-auto'>Choose Your Options</h4>\r\n               </div>\r\n                \r\n                <div className='row row-content pt-3'>\r\n                    \r\n                    <div className='col-12 col-md-5' >\r\n                    <CardView1 toggleModal1 = {this.toggleModal1} />\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-5 offset-1'>\r\n                    <CardView2 toggleModal2 = {this.toggleModal2} />\r\n                    </div> \r\n                </div>\r\n\r\n\r\n            <Modal isOpen={this.state.isOpen1} toggle={() => this.toggleModal1()}>\r\n\r\n                    <ModalHeader tag='h5'> User Login </ModalHeader>\r\n\r\n                    <ModalBody className=\"col-12 m-2\">\r\n                    <p className='text-secondary'>Please fill this form to log into your account.</p>\r\n                \r\n                <LocalForm onSubmit={(values) => this.handleSubmit1(values)}>\r\n\r\n                        <Row className='form-group p-2'>\r\n                            <Label htmlFor='email' md={5} className='pl-3'>Email Address</Label>                \r\n                        \r\n                            <InputGroup className='' style={{width: '430px'}}>                     \r\n                            <Control.text model='.email' name='email' placeholder='Eg. mail@example.com'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                            />\r\n                            <InputGroupAddon addonType='append' className='igadd' style={{borderRadius: '13px'}}>\r\n                                <InputGroupText className='igt'>\r\n                                    <i className='fa fa-user p-1'></i>\r\n                                </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n\r\n                        <Errors model='.email' className='text-danger'\r\n                            show='touched'\r\n                            messages={{\r\n                                required: 'Required',\r\n                                validEmail: 'Invalid Email Address'\r\n                            }}\r\n                        /> \r\n                        </Row>\r\n                        \r\n                        <Row className='form-group p-2'>\r\n                            <Label htmlFor='password' md={5} className='ml-3'>Password</Label>\r\n                            \r\n                            <InputGroup className='' style={{width: '430px'}}>          \r\n                            <Control type='password' model='.password' name='password'\r\n                                    placeholder='Password' className='form-control' \r\n                                    validators={{\r\n                                        required\r\n                                    }}\r\n                            />\r\n                            <InputGroupAddon addonType='append' className='igadd' style={{borderRadius: '13px'}}>\r\n                                <InputGroupText className='igt'><i className='fa fa-lock p-1'></i></InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n\r\n                        <Errors model='.password' className='text-danger'\r\n                            show='touched'\r\n                            messages={{\r\n                                required: 'Required'\r\n                            }}\r\n                        />   \r\n                        </Row>\r\n\r\n                            \r\n                        <ButtonGroup className='mt-4 p-3'>\r\n                            \r\n                            <Button type=\"submit\" color=\"primary\"\r\n                                style={{borderRadius: '5px', width: '90px', height: '40px'}}>\r\n                                <span className='fa fa-paper-plane fa-md color-white'></span> Get In\r\n                            </Button>\r\n                            \r\n                            <Button outline color=\"primary\" onClick={() => this.toggleModal1()}\r\n                                style={{borderRadius: '5px', width: '90px', height: '40px', marginLeft: '10px'}}>\r\n                                <span className='fa fa-undo fa-md color-white'></span> back\r\n                            </Button>\r\n                        \r\n                    </ButtonGroup>\r\n\r\n                </LocalForm>    \r\n                </ModalBody>\r\n            </Modal>\r\n           \r\n\r\n           <Modal isOpen={this.state.isOpen2} toggle={() => this.toggleModal2()} className='p-2'>\r\n              \r\n               <ModalHeader tag='h5'> <span className='ml-2'> Admin Login</span></ModalHeader>\r\n              \r\n               <ModalBody className=\"col-12 m-2\">\r\n                <p className='text-secondary'>Please fill this form to create an account.</p>\r\n\r\n                <LocalForm onSubmit={(values) => this.handleSubmit2(values)}>\r\n                        <Row className='form-group p-2'>\r\n                            <Label htmlFor='empid' md={5}>Employee ID</Label>\r\n                            \r\n                            <InputGroup className=''  style={{width: '430px'}}>             \r\n                               \r\n                              <Control.text addon model='.empid' name='empid' \r\n                                    placeholder='Employee ID' className='form-control' \r\n                                    validators={{ required }}\r\n                              />\r\n                             <InputGroupAddon addonType='append' className='igadd2' style={{borderRadius:'12px'}}>\r\n                                 <InputGroupText className='igt'><i className='fa fa-user p-1'></i></InputGroupText>\r\n                             </InputGroupAddon>\r\n                           </InputGroup>\r\n\r\n                           <Errors model='.empid' className='text-danger'\r\n                                show='touched'\r\n                                messages={{\r\n                                    required: 'Required'\r\n                                }}\r\n                            /> \r\n                        </Row>\r\n                        \r\n                       <Row className='form-group p-2'>\r\n                          <Label htmlFor='password' md={5} >Password</Label>\r\n                            \r\n                          <InputGroup className=''  style={{width: '430px'}}>   \r\n\r\n                              <Control type='password' model='.password' name='password' \r\n                                    placeholder='Password' className='form-control'\r\n                                    validators={{ required }}\r\n                              />\r\n                            <InputGroupAddon addonType='append' className='igadd2' style={{borderRadius:'12px'}}>\r\n                                <InputGroupText className='igt'><i className='fa fa-lock p-1'></i></InputGroupText>\r\n                             </InputGroupAddon>\r\n\r\n                            </InputGroup>\r\n\r\n                            <Errors model='.password' className='text-danger'\r\n                                show='touched'\r\n                                messages={{\r\n                                    required: 'Required'\r\n                                }}\r\n                            /> \r\n                       </Row>\r\n\r\n                   <ButtonGroup className='mt-4 p-3'>\r\n                        \r\n                        <Button type=\"submit\" color=\"success\"\r\n                            style={{borderRadius: '5px', width: '90px', height: '40px'}}>\r\n                            <span className='fa fa-paper-plane fa-md color-white'></span> Get In\r\n                        </Button>\r\n                        \r\n                        <Button outline color=\"success\" onClick={() => this.toggleModal2()}\r\n                            style={{borderRadius: '5px', width: '90px', height: '40px', marginLeft: '10px'}}>\r\n                            <span className='fa fa-undo fa-md color-white'></span> back\r\n                        </Button>\r\n                    \r\n                   </ButtonGroup>\r\n\r\n                 </LocalForm>\r\n               </ModalBody>\r\n          </Modal>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default First;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, CardTitle, Label, Button, Row, Col,\r\n         InputGroup, InputGroupAddon, InputGroupText, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\n\r\nimport emailjs from 'emailjs-com';\r\nimport First from './FirstComponent';\r\n \r\nconst required = (val) => (val) && (val.length);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst isNumber = (val) => !(val) || !isNaN(val)\r\nconst validEmail = (email) => {\r\n   return !(email) || /^[A-Za-z0-9._%+-]+@[A-za-z0-9.-]+\\.[A-Za-z]{2,4}$/i.test(email)\r\n};\r\n\r\nclass Signup extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           isOpen: false,\r\n           otp: null,\r\n           values: null\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values)\r\n    {\r\n        if(values.password !== values.cpassword)\r\n        { \r\n            alert(\"Password Mismatch...\");\r\n            return;\r\n        }\r\n        \r\n        var otp = this.generateOTP(values.email, values.firstname, values.lastname);\r\n\r\n        this.setState({\r\n            otp: otp,\r\n            values: values\r\n        });\r\n\r\n        this.toggleModal();\r\n       \r\n        //this.props.registerUser(values.firstname, values.lastname, values.email, values.aadharno, values.phoneno, values.password);\r\n    }\r\n\r\n    toggleModal()\r\n    {\r\n       this.setState({\r\n           isOpen: !this.state.isOpen\r\n       });\r\n    }\r\n\r\n   generateOTP(email, fname, lname) {\r\n          \r\n      var digits = '0123456789';\r\n      let OTP = '';\r\n      for (let i = 0; i < 6; i++ ) {\r\n          OTP += digits[Math.floor(Math.random() * 10)];\r\n      }\r\n      \r\n      console.log('generated otp: ',OTP,'\\n email: ',email);\r\n      var msg = \"Your OTP for verification is \"+OTP+\". It will be expired after 5 minutes.\";\r\n      \r\n      emailjs.send(\"service_gjg52fc\",\"template_jt4zcjh\", { \r\n         message: msg,\r\n         reply_to: email,\r\n         to_name: fname +' '+ lname\r\n\r\n      }, \"user_ixb8MCpbywK1dJ96NiYyz\")\r\n      .then((msg) => {\r\n          alert('6-digit OTP sent to your mail-id');\r\n          \r\n      },(err) => {\r\n           alert('Error: while sending...try again...\\n'+err);\r\n      });\r\n      \r\n      return OTP;\r\n   }\r\n\r\n    handleSubmitVerify(values)\r\n    {\r\n        this.toggleModal();\r\n\r\n        if(values.otp !== this.state.otp){\r\n           alert(\"OTP Verification failed...\");\r\n        }\r\n        else{\r\n           this.props.registerUser(this.state.values.firstname, this.state.values.lastname, this.state.values.email, \r\n            this.state.values.aadharno, this.state.values.phoneno, this.state.values.password);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.props.isRegister)\r\n        {\r\n           return(\r\n               <First />\r\n           );\r\n        }\r\n\r\n        return(\r\n          <div className='container-fluid'>\r\n            \r\n           <Row className='row justify-content-center'>\r\n          \r\n             <Col md={8}>\r\n              <Card body inverse className='cview col-12 col-md-10 p-5 mt-2'>\r\n                 <CardHeader style={{'color':'black'}} tag='h3'>SignUp Page</CardHeader>\r\n                \r\n                 <CardBody className='px-4'>\r\n                  <div className=\"col-12\">\r\n\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                     <Row className='form-group p-2'>\r\n                         <Col md={5}>    \r\n                         <Label htmlFor='firstname' md={5} style={{color: 'black'}}> Firstname</Label>\r\n                           \r\n                         <InputGroup size='sm'>\r\n                             <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                  <InputGroupText className='igt'><i className='p-0'>F</i></InputGroupText>\r\n                              </InputGroupAddon>\r\n                             <Control.text model='.firstname' name='firstname' placeholder='Firstname'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, minLength: minLength(1), \r\n                                        maxLength: maxLength(15) \r\n                                    }}\r\n                              />\r\n                         </InputGroup>\r\n\r\n                        <Errors model='.firstname' className='text-danger'\r\n                                  show='touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must be less greater than or equal to 1 character',\r\n                                     maxLength: 'Must be lesser than or equal to 15 characters'\r\n                                  }}\r\n                        />\r\n                      </Col>\r\n\r\n                          <Col md={{size:5, offset:2}}>    \r\n                            <Label htmlFor='lastname' md={5} style={{color: 'black'}}> Lastname</Label>\r\n                            \r\n                            <InputGroup size='sm'>\r\n                                 <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                    <InputGroupText className='igt'><i className='p-0'>L</i></InputGroupText>\r\n                                 </InputGroupAddon>\r\n\r\n                                 <Control.text model='.lastname' name='lastname' placeholder='Lastname' \r\n                                     className='form-control'\r\n                                     validators={{\r\n                                        required, minLength: minLength(1), \r\n                                        maxLength: maxLength(15)\r\n                                     }}\r\n                                 />\r\n                             </InputGroup>\r\n\r\n                              <Errors model='.lastname' className='text-danger'\r\n                                  show = 'touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must be less greater than or equal to 1 character',\r\n                                     maxLength: 'Must be lesser than or equal to 15 characters'\r\n                                  }}\r\n                              />\r\n                           </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group p-2\">\r\n                         <Label htmlFor='email' md={4} style={{color: 'black'}}> Email Address</Label>\r\n                        \r\n                           <InputGroup size=''>\r\n                              <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                 <InputGroupText className='igt'><i className='fa fa-user p-1'></i></InputGroupText>\r\n                              </InputGroupAddon>\r\n\r\n                              <Control.text model='.email' id='email' name='email' placeholder='Eg. mail@example.com'\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                    required, validEmail\r\n                                 }}\r\n                              />\r\n                           </InputGroup>\r\n\r\n                           <Errors model='.email' className='text-danger'\r\n                               show ='touched'\r\n                               messages={{\r\n                                     required: 'Required',\r\n                                     validEmail: 'Invalid Email Address'\r\n                               }}\r\n                          />\r\n                     </Row>\r\n\r\n                     <Row className='form-group p-2'>\r\n                            <Label htmlFor='aadharno' md={4} style={{color: 'black'}}> Aadhar No.</Label>\r\n                           \r\n                              <InputGroup>\r\n                                 <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}> \r\n                                    <InputGroupText className='igt'><i className='fa fa-info p-1'></i></InputGroupText>\r\n                                 </InputGroupAddon>\r\n\r\n                                 <Control.text model='.aadharno' name='aadharno' style={{width: '100px'}}\r\n                                       placeholder='Aadhar No.' className='form-control'\r\n                                       validators={{\r\n                                          required, minLength: minLength(12), \r\n                                          maxLength:maxLength(12), isNumber\r\n                                       }}\r\n                                 />\r\n                              </InputGroup>\r\n\r\n                              <Errors model='.aadharno' className='text-danger'\r\n                                 show = 'touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must contain 12 digits',\r\n                                     maxLength: 'Must contain 10 digits',\r\n                                     isNumber: 'Must contain Numbers'\r\n                                  }}\r\n                              />\r\n\r\n                     </Row>\r\n\r\n                     <Row className='form-group p-2'>\r\n                           <Label htmlFor='phoneno' md={4} style={{color: 'black'}}> Mobile No.</Label>\r\n                           \r\n                           <InputGroup size=''>\r\n                              <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                 <InputGroupText className='igt'><i className='fa fa-phone p-1'></i></InputGroupText>\r\n                              </InputGroupAddon>\r\n\r\n                              <Control.text model='.phoneno' name='phoneno' style={{width: '450px'}}\r\n                                 placeholder='Phone No.' className='form-control'\r\n                                 validators={{\r\n                                    required, minLength: minLength(10),\r\n                                    maxLength: maxLength(10), isNumber\r\n                                 }}\r\n                              />\r\n                           </InputGroup>\r\n\r\n                           <Errors model='.phoneno' className='text-danger'\r\n                                  show = 'touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must contain 10 digits',\r\n                                     maxLength: 'Must contain 10 digits',\r\n                                     isNumber: 'Must contain Numbers'\r\n                                  }}\r\n                           />\r\n                     </Row>\r\n\r\n                     <Row className='form-group p-2'>\r\n                           <Col md={5}>\r\n                           <Label htmlFor='password' md={6} style={{color: 'black'}}> Password</Label>\r\n                           \r\n                           <InputGroup size=''>\r\n                              <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                 <InputGroupText className='igt'><i className='fa fa-lock p-1'></i></InputGroupText>\r\n                              </InputGroupAddon>\r\n\r\n                              <Control type='password' model='.password' id='password' name='password'\r\n                                  placeholder='password' className='form-control'\r\n                                  validators={{\r\n                                     required, minLength: minLength(6)\r\n                                  }}\r\n                              />\r\n                           </InputGroup>\r\n\r\n                            <Errors model='.password' className='text-danger'\r\n                                  show = 'touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must contain 6 characters'\r\n                                  }}\r\n                            />\r\n                           </Col>\r\n\r\n                           <Col md={{size:5, offset:2}}>\r\n                              <Label htmlFor='cpassword' md={12} style={{color: 'black'}}> Confirm Password</Label>\r\n                              \r\n                              <InputGroup size=''>\r\n                                 <InputGroupAddon className='igadd2' style={{borderRadius: '12px'}}>\r\n                                 <InputGroupText className='igt'><i className='fa fa-lock p-1'></i></InputGroupText>\r\n                                 </InputGroupAddon>\r\n                                \r\n                               <Control type='password' model='.cpassword' id='cpassword' name='cpassword'\r\n                                   placeholder='confirm password' className='form-control'\r\n                                  validators={{\r\n                                    required, minLength: minLength(6)\r\n                                  }}\r\n                              />\r\n                              </InputGroup>\r\n\r\n                              <Errors model='.cpassword' className='text-danger'\r\n                                  show = 'touched'\r\n                                  messages={{\r\n                                     required: 'Required',\r\n                                     minLength: 'Must contain 6 characters'\r\n                                  }}\r\n                             />\r\n                           </Col>\r\n                     </Row>\r\n\r\n                     <Row className='form-group mt-2 p-2'>\r\n                           <div className='form-check'>\r\n                              <Label check style={{'color':'black'}}>\r\n                                 <Control.checkbox model='.agree' name='agree'\r\n                                    className='form-check-input'\r\n                                 />{' '}\r\n                                 I agree with terms and conditions.\r\n                              </Label>\r\n                           </div>\r\n                      </Row>\r\n                       \r\n                     <Row className='form-group pt-2 mt-3'>\r\n                          <Col>\r\n                               <Button type=\"submit\" color=\"success\" style={{borderRadius: '20px', width: '140px', height: '45px'}}>\r\n                                   <span className='fa fa-sign-in fa-md color-white'></span> SignUp\r\n                              </Button>\r\n                          </Col>\r\n                       </Row>\r\n                    \r\n                    </LocalForm>\r\n                 </div> \r\n\r\n                </CardBody>\r\n             </Card>\r\n            </Col>\r\n           </Row>\r\n         \r\n          <Modal isOpen={this.state.isOpen} className='p-2'>\r\n             <ModalHeader tag='h5'  toggle={() => this.toggleModal()}>\r\n                 <span className='ml-2'>Email Verification</span> \r\n            </ModalHeader>\r\n            \r\n             <ModalBody className='p-3'>\r\n                <LocalForm onSubmit={(values) => this.handleSubmitVerify(values)}>\r\n                    <div className='form-group'>\r\n                       <Label htmlFor='otp' className='p-2' style={{color: 'black'}}> 6-digit Number</Label>\r\n                       <Control type='password' model='.otp' className='form-control mx-1' name='otp'\r\n                           placeholder='6-digit number' \r\n                           validators={{ required }}\r\n                       />\r\n                       <Errors model='.otp' className='text-danger'\r\n                          show='touched'\r\n                          messages={{\r\n                             required: 'Required'\r\n                          }}\r\n                       />\r\n                    </div>\r\n          \r\n                  <div className='d-flex justify-content-end'>\r\n                    <Button type='submit' className='btn btn-danger my-2'> Verify </Button>  \r\n                  </div>  \r\n                </LocalForm>\r\n             </ModalBody>\r\n          </Modal>\r\n\r\n          </div>      \r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup; ","\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\r\nexport const ADMIN_LOGIN_SUCCESS = 'ADMIN_LOGIN_SUCCESS';\r\nexport const ADMIN_LOGIN_FAILED = 'ADMIN_LOGIN_FAILED';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\r\n\r\nexport const ADD_DEPARTMENTS = 'ADD_DEPARTMENTS';\r\nexport const ADD_PROFILE = 'ADD_PROFILE';\r\nexport const ADD_PROFILE_ERR = 'ADD_PROFILE_ERR';\r\nexport const ADD_EMP_PROFILE = 'ADD_EMP_PROFILE';\r\nexport const ADD_EMP_PROFILE_ERR = 'ADD_EMP_PROFILE_ERR';\r\n\r\nexport const ADD_USER_DASH = 'ADD_USER_DASH';\r\nexport const ADD_EMP_DASH = 'ADD_EMP_DASH';\r\nexport const ADD_RAISED = 'ADD_RAISED';\r\nexport const ERR_RAISED = 'ERR_RAISED';\r\nexport const ADD_PENDING = 'ADD_PENDING';\r\nexport const ERR_PENDING = 'ERR_PENDING';\r\nexport const ADD_RESOLVED = 'ADD_RESOLVED';\r\nexport const ERR_RESOLVED = 'ERR_RESOLVED';\r\n\r\nexport const ADD_RECEIVED = 'ADD_RECEIVED';\r\nexport const ERR_RECEIVED = 'ERR_RECEIVED';\r\nexport const ADD_EMP_RESOLVED = 'ADD_EMP_RESOLVED';\r\nexport const ERR_EMP_RESOLVED = 'ERR_EMP_RESOLVED';\r\n\r\nexport const ADD_USER_REPLY = 'ADD_USER_REPLY';\r\nexport const ADD_EMP_REPLY = 'ADD_EMP_REPLY';\r\n\r\n\r\n","\r\n//export const baseUrl = \"http://localhost:5000/\";\r\n\r\nexport const baseUrl = process.env.APP_URL || \"https://thirdeye-grs.herokuapp.com/\";","import * as ActionTypes from './ActionTypes';\r\n\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//userLogin\r\nexport const userLogin = (uname, pwd) => (dispatch) => {\r\n     \r\n     const user = {\r\n         uname: uname, pwd: pwd\r\n     };\r\n    \r\n     return fetch(baseUrl + 'userlogin', {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    }) \r\n    .then( res => {\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(res.isLogin) {\r\n          alert(res.msg);\r\n          dispatch(userLoginSuccess(res.data)); \r\n        }\r\n        else {\r\n            alert(res.msg);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        alert(error);\r\n        dispatch(userLoginFailed(error));\r\n    })\r\n}; \r\n\r\nexport const userLoginSuccess = (res) => ({\r\n    type: ActionTypes.USER_LOGIN_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const userLoginFailed = (err) => ({\r\n   type: ActionTypes.USER_LOGIN_FAILED,\r\n   payload: err\r\n});\r\n\r\n\r\n//adminLogin\r\nexport const adminLogin = (eid, pwd) => (dispatch) => {\r\n     \r\n    const emp = {\r\n        eid: eid, pwd: pwd\r\n    };\r\n   \r\n    return fetch(baseUrl + 'adminlogin', {\r\n       method: 'POST',\r\n       body: JSON.stringify(emp),\r\n       headers: {\r\n           'Content-type': 'application/json'\r\n       },\r\n       credentials: 'same-origin'\r\n   }) \r\n   .then( res => {\r\n       if(res.ok){\r\n           return res;\r\n       }\r\n       else{\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(res.isLogin){\r\n         alert(res.msg);\r\n         dispatch(adminLoginSuccess(res.data)); \r\n       }\r\n       else{\r\n           alert(res.msg);\r\n       }\r\n   })\r\n   .catch(error => {\r\n       dispatch(adminLoginFailed(error))\r\n       alert(error);\r\n   })\r\n};\r\n\r\nexport const adminLoginSuccess = (res) => ({\r\n    type: ActionTypes.ADMIN_LOGIN_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const adminLoginFailed = (err) => ({\r\n   type: ActionTypes.ADMIN_LOGIN_FAILED,\r\n   payload: err\r\n});\r\n\r\n//registerUser\r\n\r\nexport const registerUser = (fname, lname, email, aadhar, mobile, pwd) => (dispatch) => {\r\n    \r\n     const newUser = {\r\n        fname: fname, lname: lname, email: email,\r\n        aadhar: aadhar, mobile: mobile, pwd: pwd,\r\n        joined: new Date().toISOString()\r\n     };\r\n\r\n     return fetch(baseUrl + 'registerUser', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newUser),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n     })\r\n     .then( res => {\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(res.isRegister){\r\n          dispatch(registerSuccess(res)); \r\n          alert(res.msg);\r\n        }\r\n        else{\r\n            alert(res.msg);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        dispatch(registerFailed(error))\r\n        alert(error);\r\n    });\r\n};\r\n\r\nexport const registerSuccess = (res) => ({\r\n    type: ActionTypes.REGISTER_SUCCESS,\r\n    payload: res\r\n});\r\n\r\nexport const registerFailed = (err) => ({\r\n    type: ActionTypes.REGISTER_FAILED,\r\n    payload: err\r\n});\r\n\r\n\r\n//fetchDepartments\r\n\r\nexport const fetchDepartments = () => (dispatch) => {\r\n    \r\n    return fetch(baseUrl + 'getdept')\r\n    .then( res => {\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        console.log(res);\r\n        dispatch(addDepartments(res.data));\r\n    })\r\n    .catch(err => {\r\n        alert(err);\r\n    });\r\n\r\n};\r\n\r\nexport const addDepartments = (res) => ({\r\n     type: ActionTypes.ADD_DEPARTMENTS,\r\n     payload: res\r\n});\r\n\r\n\r\n//fetchProfile\r\n\r\nexport const fetchProfile = (email) => (dispatch) => {\r\n\r\n    const obj = { email: email };\r\n\r\n     return fetch(baseUrl + 'getProfile',{\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n     }) \r\n     .then( res => {\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n      }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n     })\r\n     .then(res => res.json())\r\n     .then(res => {\r\n        if(!res.isErr) {\r\n          //console.log(res.data);\r\n         dispatch(addProfile(res.data))\r\n        }\r\n     })\r\n     .catch(err => addProfileErr(err));\r\n};\r\n\r\nexport const addProfile = (res) => ({\r\n     type: ActionTypes.ADD_PROFILE,\r\n     payload: res\r\n});\r\n\r\nexport const addProfileErr = (err) => ({\r\n    type: ActionTypes.ADD_PROFILE_ERR,\r\n    payload: err\r\n});\r\n\r\n\r\n//fetchEmpProfile\r\nexport const fetchEmpProfile = (empid) => (dispatch) => {\r\n\r\n    const obj = { empid: empid };\r\n    //console.log(JSON.stringify(obj));\r\n\r\n     return fetch(baseUrl + 'getEmpProfile',{\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n     }) \r\n     .then( res => {\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n      }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n     })\r\n     .then(res => res.json())\r\n     .then(res => {\r\n        if(!res.isErr) {\r\n          console.log(res.data);\r\n         dispatch(addEmpProfile(res.data))\r\n        }\r\n     })\r\n     .catch(err => addEmpProfileErr(err));\r\n};\r\n\r\nexport const addEmpProfile = (res) => ({\r\n     type: ActionTypes.ADD_EMP_PROFILE,\r\n     payload: res\r\n});\r\n\r\nexport const addEmpProfileErr = (err) => ({\r\n    type: ActionTypes.ADD_EMP_PROFILE_ERR,\r\n    payload: err\r\n});","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\n\r\nimport First from './FirstComponent';\r\nimport Signup from './SignupComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n \r\nimport { userLogin, adminLogin, registerUser } from '../../redux/ActionCreator';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       userlogin: state.userlogin,\r\n       adminlogin: state.adminlogin,\r\n       userregister: state.userregister\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    userLogin: (uname, pwd) => {\r\n         dispatch(userLogin(uname, pwd))\r\n    },\r\n\r\n    adminLogin: (eid, pwd) => {\r\n        dispatch(adminLogin(eid, pwd))\r\n    },\r\n\r\n    registerUser: (fname, lname, email, aadhar, mobile, password) => {\r\n        dispatch(registerUser(fname, lname, email, aadhar, mobile, password))\r\n    },\r\n\r\n});\r\n\r\nclass Main extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    renderHeader()\r\n    {\r\n        return(\r\n           <div className=''>\r\n               <Navbar dark expand='md'>\r\n                  <div className='container pt-2'> \r\n                    <NavbarBrand className='mr-auto' style={{fontFamily:  \"Goudy Bookletter 1911\"}} >\r\n                        <div className='row'>\r\n                            <span className='col-4'>\r\n                                <img src='/assets/thirdeye.png' height='50' weight='51' alt='logo' style={{borderRadius: '30px'}} />\r\n                            </span>\r\n                            <h3 className='col-8 pt-2'>Third Eye</h3>\r\n                        </div>\r\n                    </NavbarBrand>\r\n                  </div>\r\n               </Navbar>\r\n           </div>\r\n        );\r\n    }\r\n\r\n    renderFooter()\r\n    {\r\n        return(\r\n            <div className='row justify-content-left'>\r\n              <div className='col-auto p-3'>\r\n                 <p className=''>@ Copyright 2021 Third Eye</p>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        const LoginPage = () => {\r\n           return(\r\n             <First \r\n                 uisLogin = {this.props.userlogin.isLogin}\r\n                 uerrMess = {this.props.userlogin.errMess}\r\n                 udata = {this.props.userlogin.data}\r\n                 aisLogin = {this.props.adminlogin.isLogin}\r\n                 aerrMess = {this.props.adminlogin.errMess}\r\n                 adata = {this.props.adminlogin.data}\r\n                 userLogin = {this.props.userLogin}\r\n                 adminLogin = {this.props.adminLogin}\r\n             />\r\n           );\r\n        };\r\n\r\n        const SignupPage = () => {\r\n            return(\r\n              <Signup \r\n                 isRegister = {this.props.isRegister}\r\n                 errMess = {this.props.errMess}\r\n                 data = {this.props.data}\r\n                 registerUser = {this.props.registerUser}\r\n              />\r\n            );\r\n        };\r\n\r\n        return(\r\n           <div className=''>\r\n              {this.renderHeader()}\r\n\r\n                <Switch>\r\n                    <Route path='/first/app' component={LoginPage} />\r\n                    <Route path='/first/signup' component={SignupPage} />\r\n                    <Redirect to='/first/app' />\r\n                </Switch>\r\n    \r\n             <div className='container'>\r\n                {this.renderFooter()}\r\n             </div>\r\n\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Main));","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavItem, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nclass Header extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           isOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n   toggleModal() {\r\n      this.setState({\r\n         isOpen: !this.state.isOpen\r\n      });\r\n   }\r\n   \r\n   logOut() {\r\n\r\n      var r = window.confirm(\"Are you sure you want to log out?\");\r\n      if(r === true)\r\n        alert(\"You have been logged out successfully...\");\r\n\r\n      const cookies = new Cookies();\r\n      cookies.remove('userid', { path: '/'});\r\n   \r\n     \r\n      window.location.reload();\r\n      window.location.href = '/first/app';\r\n   }\r\n\r\n   renderModal() {\r\n      if(this.props.isLogin === true) {\r\n         return(\r\n           <>     \r\n            <Modal isOpen={this.state.isOpen} toggle={this.toggleModal}>\r\n               <ModalHeader>\r\n                     YOUR PROFILE\r\n               </ModalHeader>\r\n               <ModalBody className='p-3'>\r\n                     <dl>\r\n                        <dt>Firstname</dt> <dd>{this.props.udata[0].fname } </dd>\r\n                        <dt>Lastname</dt> <dd>{this.props.udata[0].lname}</dd> \r\n                        <dt>Email Id</dt> <dd>{this.props.udata[0].email}</dd> \r\n                        <dt>Mobile No.</dt> <dd>{this.props.udata[0].mobile}</dd> \r\n                        <dt>Aadhar</dt> <dd>{this.props.udata[0].aadhar}</dd> \r\n                        <dt>Joined at</dt> <dd>{this.props.udata[0].joined}</dd> \r\n                     </dl>\r\n               </ModalBody>\r\n            </Modal>\r\n           </>\r\n         );\r\n      }\r\n      else {\r\n         <div></div>\r\n      }\r\n   }\r\n\r\n   renderNav() {\r\n\r\n\r\n      if(this.props.isLogin === false) {\r\n         \r\n        return(\r\n         <div className='container-fluid'>\r\n            <Navbar expand='md' className='subnav px-3 row'>\r\n               <div className='col-7'>\r\n                  <Nav navbar className='ml-auto'>\r\n                     <NavItem className='px-5'>\r\n                         <span className='px-5'> Hello folks ! </span>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n         \r\n               <div className='col-5 ml-auto'>\r\n                  <Nav navbar className='mx-5'>\r\n                     <NavItem className='px-5 py-2'>\r\n                           You're not logged in.<i className='fa fa-caret'></i>\r\n                     </NavItem>\r\n                     <NavItem className='pt-2'>\r\n                        <NavLink to='/first' className='text-white'>\r\n                           Signin\r\n                        </NavLink>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n            </Navbar>\r\n         </div>\r\n        );\r\n      }\r\n      else {\r\n        return(\r\n         <div className='container-fluid'>\r\n            <Navbar expand='md' className='subnav p-2 row'>\r\n               <div className='col-9'>\r\n                  <Nav navbar className='px-5'>\r\n                     <NavItem>\r\n                           <span className='px-5'>Hello { this.props.udata[0].fname +' '+ this.props.udata[0].lname } ! </span>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n\r\n               <div className='col-3 ml-auto'>\r\n                  <Nav className='ml-auto' navbar>\r\n                     <NavItem>\r\n                        <Button color='link' onClick={() => this.toggleModal()}>Profile</Button>\r\n                     </NavItem>\r\n                     <NavItem>\r\n                     <Button color='link' onClick={() => this.logOut()}> Log Out </Button>\r\n                     </NavItem> \r\n                  </Nav>\r\n               </div>\r\n            </Navbar>\r\n         </div>\r\n        );\r\n      }\r\n   }\r\n \r\n   \r\n   \r\n   render() {\r\n  \r\n        return(\r\n           <div >\r\n            <Navbar dark expand='md'>\r\n              <div className='container'>\r\n                 <NavbarBrand className='mr-auto' style={{fontFamily:  \"Goudy Bookletter 1911\"}} >\r\n                   <div className='row'>\r\n                     <span className='col-4'>\r\n                        <img src='/assets/thirdeye.png' height='50' weight='51' alt='logo' style={{borderRadius: '30px'}} />\r\n                     </span>\r\n                     <h3 className='col-8 pt-2'>Third Eye</h3>\r\n                  </div>\r\n                 </NavbarBrand>\r\n\r\n                 <Nav navbar>\r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/user/home'>\r\n                          <span className='fa fa-home fa-md color-white'></span> Home\r\n                      </NavLink>\r\n                    </NavItem>\r\n                 \r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/user/complain'>\r\n                          <span className='fa fa-edit fa-md'></span> Complain\r\n                      </NavLink>\r\n                    </NavItem>\r\n                \r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/user/contact'>\r\n                          <span className='fa fa-envelope fa-md'></span> Contact Us\r\n                      </NavLink>\r\n                    </NavItem>\r\n     \r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/user/about'>\r\n                          <span className='fa fa-info fa-md'></span> About Us\r\n                      </NavLink>\r\n                    </NavItem>\r\n                 </Nav>\r\n               </div>\r\n            </Navbar>\r\n          \r\n         <div>\r\n        \r\n           { this.renderNav() }\r\n        \r\n           { this.renderModal() }\r\n         \r\n         </div>\r\n         \r\n         \r\n         </div>\r\n        );\r\n     }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Footer extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n     render(){\r\n        \r\n        return(\r\n           <>\r\n             <div className='footer pt-5 text-white'>\r\n                <div className='row justify-content-center'>\r\n                    \r\n                    <div className='col-4 col-sm-2'>\r\n                       <h4>Links</h4>\r\n                       <ul className='list-unstyled text-white'>\r\n                          <li><Link to='' className=''>Home</Link></li>\r\n                          <li><Link to=''>Complaints</Link></li>\r\n                          <li><Link to=''>Contact Us</Link></li>\r\n                          <li><Link to=''>Who are We?</Link></li>\r\n                       </ul>\r\n                    </div>\r\n\r\n                    <div className='col-8 col-sm-4'>\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-sm-4'>\r\n                       <div className='text-center'>\r\n                         <a><i className='fa fa-facebook fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-google fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-twitter fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-whatsapp fa-lg p-3'></i></a>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row justify-content-center'>\r\n                  <div className='col-auto pt-3'>\r\n                     <p className='text-secondary'>@ Copyright 2021 Third Eye</p>\r\n                  </div>\r\n                </div>\r\n\r\n             </div>\r\n           </>\r\n        );\r\n     }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Jumbotron, Card, CardBody, Row, Col, ListGroup, ListGroupItem, ListGroupItemHeading,\r\n        ListGroupItemText, Badge, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { AiFillHourglass, AiFillLike, AiFillRocket, AiFillWechat, AiOutlineFile } from 'react-icons/ai';\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { GoIssueOpened } from 'react-icons/go';\r\nimport { HiStatusOnline } from 'react-icons/hi';\r\nimport { MdFeedback } from 'react-icons/md';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport { IoMdList } from 'react-icons/io';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Nav } from 'react-bootstrap';\r\nimport FileViewer from 'react-file-viewer';\r\n\r\nvar mimetypes = require('mime-types');\r\n\r\nclass Home extends Component \r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeKey: 1,\r\n            openModal: false,\r\n            fetched: null\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.byDefault = this.byDefault.bind(this);\r\n    }\r\n\r\n    toggle(key) {\r\n       this.setState ({\r\n          activeKey: key\r\n       });\r\n    }\r\n\r\n   toggleFileViewer() {\r\n      this.setState ({\r\n         openModal: !this.state.openModal\r\n      });\r\n   }\r\n    \r\n    handleClick(fetch) {\r\n       this.setState ({\r\n           fetched: fetch\r\n       });\r\n    }\r\n\r\n    renderData(fetched) \r\n    {\r\n        if(fetched === null)\r\n          return (\r\n            <div className='mt-5 pt-5' >\r\n               <div className='d-flex justify-content-center pt-3'>\r\n                  <img src='/assets/thirdeye.png' alt='Third eye' style={{opacity: '0.3', borderRadius: '50%', height: '70px', width: '70px'}} />\r\n                </div> <br/>\r\n                <h5 className='d-flex justify-content-center'> No Item is Selected... </h5> \r\n            </div>\r\n          );\r\n   \r\n        else\r\n          return (\r\n             <div className='pt-3 pl-4'>\r\n                <div className='row'>\r\n                    <h4 className='col-md-8'> {fetched.sub} </h4> \r\n                    <span className='col-md-4'>\r\n                       { (fetched.status === 'resolved')? <i className='fa fa-check-circle fa-lg text-success'></i> :\r\n                          <i className='fa fa-spinner fa-lg text-primary'></i> }\r\n                    </span>\r\n                </div> <hr/>\r\n\r\n                <dl>\r\n                <dt><GoIssueOpened /> Issue Id </dt> <dd>{fetched.issueid}</dd>\r\n                <dt><BiUserCircle /> Raised by </dt> <dd>{fetched.userid}</dd>\r\n                <dt><MdFeedback /> Summary </dt>  <dd>{fetched.issue}</dd>\r\n                <dt><FiClock /> Raised on </dt>  \r\n                <dd>{new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                          .format(new Date(fetched.date))} </dd>\r\n\r\n                <dt>Proof</dt>\r\n                <dd>\r\n                   <a onClick={() => this.toggleFileViewer()}> <AiOutlineFile /> {fetched.proof.name} </a> <br/>\r\n                   <p className='text-primary py-2' onClick={() => this.toggleFileViewer()}>&#62; <u> Tap to Open...</u></p>\r\n                    \r\n\r\n                   <Modal size='lg' isOpen={this.state.openModal} toggle={() => this.toggleFileViewer()} contentClassName='custom-modal'>\r\n                      <ModalHeader>{fetched.proof.name}</ModalHeader>\r\n                       <ModalBody>\r\n                        <div className='p-2' style={{height: '550px', overflow: 'scroll'}}>\r\n                           <FileViewer \r\n                              fileType={ mimetypes.extension(fetched.proof.type) }\r\n                              filePath={fetched.proof.path}\r\n                           />\r\n                        </div>\r\n                      </ModalBody>\r\n                  </Modal>\r\n                </dd>\r\n\r\n                <dt><HiStatusOnline /> Status </dt> \r\n                <dd>\r\n                 { (fetched.status === 'pending')? <i className='fa fa-spinner text-primary'></i>: <i className='fa fa-check-circle text-success'></i> } {' '}\r\n                 <span className='p-2'> { fetched.status.toUpperCase() }  </span>\r\n                </dd>\r\n\r\n                <dt></dt>\r\n                <dd className='pt-3'>\r\n                  <Link to={`/user/${fetched.issueid}`}> <i className='fa fa-angle-double-right'></i> Tap for More info </Link> \r\n                </dd>\r\n\r\n                </dl>\r\n             </div>\r\n          );\r\n    }\r\n\r\n\r\n    renderList(fetched, isErr, errMess) {\r\n       \r\n      if(isErr) \r\n         return ( <div>{errMess}</div> ); \r\n      \r\n      else if (fetched.length === 0)\r\n         return (\r\n            <div className='m-5 p-5'> <p> Not Available </p>  </div>\r\n         );\r\n\r\n      else\r\n      { \r\n       return(\r\n         <> <ListGroup className='lg'>\r\n          {\r\n             fetched.map((fetch) => {\r\n                   \r\n              return(\r\n                <div className='lgi'> \r\n                   <ListGroupItem className='lgisub' active={this.state.fetched === null || this.state.fetched.issueid !== fetch.issueid}\r\n                      style={{height: '110px', margin: '2px 0 3px 0'}} color='primary'\r\n                      onClick={() => this.handleClick(fetch)}>\r\n                   \r\n                     <ListGroupItemHeading className='row'>\r\n                        <div className='col-9'> {fetch.sub} </div>\r\n                        <div className='col-3'>\r\n                           <Badge> {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric'}).format(new Date(fetch.date))} </Badge>\r\n                        </div>\r\n                     </ListGroupItemHeading>\r\n                     <ListGroupItemText>\r\n                         <div> Issue No. {fetch.issueid} </div> \r\n                         <span className='pt-1'>\r\n                            {(fetch.status.toUpperCase() ==='RESOLVED')? <i className='fa fa-check-circle'></i>\r\n                          : <i className='fa fa-spinner'></i>} {' '} {fetch.status.toUpperCase()}\r\n                         </span>\r\n                    \r\n                     </ListGroupItemText>\r\n                  </ListGroupItem>             \r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </ListGroup> </>\r\n       );\r\n      }\r\n    }\r\n\r\n    byDefault() {\r\n       this.setState ({\r\n          fetched: null\r\n       });\r\n    }\r\n\r\n     render() {\r\n\r\n        return(\r\n         <>     \r\n          <Jumbotron className='py-5'>\r\n               <div className='container'>\r\n                  \r\n                  <div className='col-12'>\r\n                      <h4 className='row justify-content-center'>DASHBOARD</h4>\r\n                      <h4 className='mt-4'>MY COMPLAINTS</h4>\r\n\r\n                      <div className='row mt-4'>\r\n\r\n                         <div className='col-md-3 p-1'>\r\n                            <div>\r\n                              <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}} >\r\n                               <CardBody className='row pl-4 pt-4'>\r\n                                 <AiFillRocket className='col-3 mt-2' size='md' />\r\n                                 <span className='col-9'>\r\n                                    Raised  <p style={{fontSize: '25px', color: '#0275d8'}}> \r\n                                         { this.props.dash.raised }\r\n                                    </p>\r\n                                 </span>\r\n                               </CardBody>\r\n                              </Card>\r\n                            </div>\r\n                         </div>\r\n                         \r\n                         <div className='col-md-3 p-1'>\r\n                            <div>\r\n                              <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}}>\r\n                               <CardBody className='row pl-4 pt-4'>\r\n                               <AiFillLike className='col-3 mt-2' size='md' />\r\n                               <span className='col-9'>\r\n                                  Resolved <p style={{fontSize: '25px', color: '#1d8f4a'}}> \r\n                                     { this.props.dash.resolved }    \r\n                                   </p>\r\n                               </span>\r\n                               </CardBody>\r\n                               </Card>\r\n                            </div>\r\n                         </div>\r\n\r\n                         <div className='col-md-3 p-1'>\r\n                            <div>\r\n                            <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}}>\r\n                             <CardBody className='row pl-4 pt-4'>\r\n                             <AiFillHourglass className='col-3 mt-2' size='md' />\r\n                               <span className='col-9'>\r\n                                  Pending  <p style={{fontSize: '25px', color: '#CC0000'}}> \r\n                                    { this.props.dash.pending }\r\n                                  </p>\r\n                               </span>\r\n                              </CardBody>\r\n                            </Card>\r\n                            </div>\r\n                         </div>\r\n\r\n                         <div className='col-md-3 p-1'>\r\n                            <div>\r\n                            <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}}>\r\n                              <CardBody className='row pl-4 pt-4'>\r\n                              <AiFillWechat className='col-3 mt-2' size='md' />\r\n                               <span className='col-9'>\r\n                                  Suggestions  <p style={{fontSize: '25px', color: '#1d8f4a'}}> \r\n                                   { this.props.dash.suggested }\r\n                                  </p>\r\n                               </span>\r\n                              </CardBody>\r\n                              </Card>\r\n                            </div>\r\n                         </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n               </div>\r\n          </Jumbotron>\r\n      \r\n\r\n          <Tab.Container defaultActiveKey=\"first\">\r\n              <div className='row row-content py-5'>\r\n                  <Nav variant=\"pills\" className=\"flex-row justify-content-center\">\r\n                     <Nav.Item>\r\n                        <Nav.Link eventKey=\"first\" onClick={this.byDefault}>Raised By You</Nav.Link>\r\n                     </Nav.Item>\r\n                     <Nav.Item>\r\n                        <Nav.Link eventKey=\"second\" onClick={this.byDefault}>Resolved By Us</Nav.Link>\r\n                     </Nav.Item>\r\n                     <Nav.Item>\r\n                        <Nav.Link eventKey=\"third\" onClick={this.byDefault}>In Progress</Nav.Link>\r\n                     </Nav.Item>\r\n                  </Nav>\r\n               </div>\r\n\r\n               <Row className='py-3 px-5'>\r\n                  <Tab.Content>\r\n                     <Tab.Pane eventKey=\"first\" style={{height: '700px'}}>\r\n                          <Row> \r\n                            <div> <h5> # RAISED BY YOU </h5> <hr/> </div>\r\n                          </Row>\r\n                        <Row className='mt-4'>\r\n                           <Col md={5}>\r\n                           <div className='mylist'>\r\n                             { this.renderList(this.props.raisedData, this.props.raisedErr, this.props.raisedErrMess) } \r\n                           </div>\r\n                           </Col>\r\n                           <Col md={7}>                             \r\n                             <div className='px-4 py-1'>\r\n                               { this.renderData(this.state.fetched) }\r\n                             </div>\r\n                           </Col>\r\n                        </Row>\r\n                     </Tab.Pane>\r\n\r\n                     <Tab.Pane eventKey=\"second\" style={{height: '700px'}}>\r\n                         <Row> \r\n                            <div> <h5> # RESOLVED BY US </h5>  <hr/> </div>\r\n                          </Row>\r\n                        <Row className='mt-4'>\r\n                           <Col md={5}>\r\n                           <div className='mylist'>\r\n                            { this.renderList(this.props.resolvedData, this.props.resolvedErr, this.props.resolvedErrMess) } \r\n                           </div>\r\n                          </Col>\r\n                           <Col md={7}>\r\n                            <div className='px-4 py-1'>\r\n                               { this.renderData(this.state.fetched) }\r\n                             </div>\r\n                           </Col>\r\n                        </Row>\r\n                     </Tab.Pane>\r\n                     \r\n                     <Tab.Pane eventKey=\"third\" style={{height: '700px'}}>\r\n                        <Row> \r\n                            <div> <h5> # IN PROGRESS </h5>  <hr/> </div>\r\n                          </Row>\r\n                       <Row className='mt-4'>\r\n                           <Col md={5}>\r\n                           <div className='mylist'>\r\n                            { this.renderList(this.props.pendingData, this.props.pendingErr, this.props.pendingErrMess) } \r\n                           </div>\r\n                           </Col>\r\n                           <Col md={7}>\r\n                            <div className='px-4 py-1'>\r\n                               { this.renderData(this.state.fetched) }\r\n                             </div>\r\n                           </Col>\r\n                        </Row>\r\n                     </Tab.Pane>\r\n                  </Tab.Content>\r\n               </Row>\r\n         </Tab.Container>\r\n\r\n        </>\r\n       );\r\n     }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Row, Col, Label, InputGroup, Button, InputGroupAddon, InputGroupText, ModalHeader, \r\n     Modal, ModalBody, ModalFooter, Table } from 'reactstrap';\r\nimport { LocalForm, Control, Errors, Field } from 'react-redux-form';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst required = (val) => val && val.length;\r\n\r\n\r\nclass Complain extends Component \r\n{\r\n    constructor(props){\r\n       super(props);\r\n\r\n       this.state = {\r\n          service: null,\r\n          isOpen: false,\r\n          id: null,\r\n          selectedFile: null,\r\n          checked: true,\r\n          values: []\r\n       };\r\n\r\n       this.handleChange = this.handleChange.bind(this);\r\n       this.handleSubmit = this.handleSubmit.bind(this);\r\n       this.selectFile = this.selectFile.bind(this);\r\n       this.onCheck = this.onCheck.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n       this.setState({\r\n           service: event.target.value\r\n       });\r\n    }\r\n\r\n    toggleModal() {\r\n       this.setState({\r\n          isOpen: !this.state.isOpen\r\n       });\r\n    }\r\n\r\n    selectFile(event) {\r\n       this.setState ({\r\n          selectedFile: event.target.files[0]\r\n       });\r\n    }\r\n\r\n    onCheck() {\r\n      this.setState ({\r\n        checked: !this.state.checked\r\n      });\r\n    }\r\n\r\n    showDetails(data) {\r\n      if(data === null)\r\n         return (<>\r\n             <p className='pt-2'> None</p>\r\n          </>);\r\n      else\r\n         return(<>\r\n           <p className='pt-2'> {data.type}</p>\r\n        </>);\r\n    }\r\n    \r\n    generateID() {\r\n          \r\n      var digits = '0123456789';\r\n      let OTP = '';\r\n      for (let i = 0; i < 6; i++ ) {\r\n          OTP += digits[Math.floor(Math.random() * 10)];\r\n      }\r\n      console.log('ID', OTP);\r\n      return OTP;\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        var id =  this.generateID();\r\n\r\n        this.setState ({\r\n          values: values,\r\n          id: id\r\n        });\r\n\r\n        this.toggleModal();\r\n    }\r\n\r\n    handleFinalSubmit() {\r\n      this.toggleModal();\r\n\r\n       console.log('selectedFile: ',this.state.selectedFile);\r\n        \r\n       const fdata = new FormData();\r\n       fdata.append('userid', new Cookies().get('userid'));\r\n       fdata.append('issueid', this.state.id);  fdata.append('service', this.state.values.service);\r\n       fdata.append('dept', this.state.values.dept);  fdata.append('sub', this.state.values.sub);\r\n       fdata.append('issue', this.state.values.issue);  fdata.append('proof', this.state.selectedFile);\r\n       fdata.append('proofname', this.state.selectedFile.name);\r\n       fdata.append('prooftype', this.state.selectedFile.type);\r\n\r\n       this.props.postComplaint(fdata);\r\n\r\n       window.location.reload();\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n           <div className='container p-5'>\r\n               <h3 className=''> Raise Your Complaint! </h3>\r\n              \r\n              <div className='pl-auto'>\r\n\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)} className='col-9'> \r\n                   <Row className='form-group p-2'>\r\n                       <Label htmlFor='userid' className='py-2'>Email Address <span className='required'>*</span> </Label>\r\n                       <Control.text model='.userid' className='form-control' name='userid'\r\n                          placeholder=' Eg. mail@gmail.com' value={new Cookies().get('userid')}\r\n                       />\r\n                   </Row>\r\n\r\n                   <Row className='form-group p-2'>\r\n                       <Label htmlFor='service' className='py-2'>Service <span className='required'>*</span> </Label>\r\n                       <Field model='.service' className='row' onChange={this.handleChange}>\r\n                        <Col md={5} >\r\n                            <input type='radio' className='form-check-input' value='complaint' /> Complaint\r\n                        </Col>\r\n                        <Col md={5} >\r\n                          <input type='radio' className='form-check-input' value='suggestion'/> Suggestion\r\n                        </Col>\r\n                       </Field>\r\n                   </Row>\r\n\r\n                   <Row className='form-group p-2'>\r\n                       <Label htmlFor='dept' className='py-2'>Area of Complanint <span className='required'>*</span> </Label>\r\n                       <Control.select model='.dept' className='form-select' name='dept' type='select'\r\n                          validators={{required}}\r\n                       >\r\n                         <option value='none'>- Select Any -</option>\r\n                       {\r\n                          this.props.dept.map((dpt) => {\r\n                             return(\r\n                              <option key={dpt.dept_id} value={dpt.dept_id}> {dpt.dept} </option>\r\n                             );  \r\n                          })\r\n                       }\r\n                         \r\n                       </Control.select>\r\n\r\n                       <Errors model='.dept' className='text-danger'\r\n                         show='touched'\r\n                         messages={{\r\n                           required: 'Required' \r\n                         }}\r\n                       />\r\n                   </Row>\r\n\r\n                   <Row className='form-group py-2'>\r\n                       <Label htmlFor='' className='py-2'> Subject (briefly) <span className='required'>*</span> </Label>\r\n                     \r\n                        <InputGroup className=''>\r\n                          <Control.text model='.sub' className='form-control' name='sub'\r\n                                placeholder=' Subject' type='text' validators={{required}}\r\n                                />\r\n\r\n                            <InputGroupAddon addonType='append' className=''>\r\n                              <InputGroupText> Reg </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                        \r\n                      <p className='pt-2' style={{fontSize: '13px'}}>\r\n                        * It should not exceed one line.\r\n                      </p>\r\n                        \r\n                       <Errors model='.sub' className='text-danger'\r\n                           show='touched'\r\n                           messages ={{\r\n                             required: 'Required'\r\n                           }}    \r\n                       />\r\n                   </Row>\r\n\r\n                   <Row className='form-group p-2'>\r\n                       <Label htmlFor='issue' className='py-2'>Issue to be solved (elaborately) <span className='required'>*</span> </Label>\r\n                       <Control.textarea model='.issue' className='form-control' name='issue'\r\n                          placeholder=' Raise your issue...' rows={7} type='textarea'\r\n                          validators={{required}}\r\n                       />\r\n\r\n                       <Errors model='.issue' className='text-danger'\r\n                         show='touched'\r\n                         messages={{\r\n                           required: 'Required' \r\n                         }}\r\n                       />\r\n                   </Row>\r\n\r\n                   <Row className='p-2' hidden={this.state.service ==  'suggestion'}>   \r\n                     <Label htmlFor='proof' className='py-2' md={12}> Proof (if any)</Label>\r\n\r\n                      <Col md={1}>\r\n                        <div className='pt-2'>\r\n                         <Control.checkbox model='.checked' className='form-check-input' onClick={this.onCheck}\r\n                         />\r\n                        </div>\r\n                      </Col>\r\n                     \r\n                      <Col md={6}>\r\n                          <Control.file model='.proof' className='form-control' name='proof' disabled={this.state.checked}\r\n                                placeholder='Choose any file' type='file' onChange={this.selectFile}\r\n                          />\r\n                       </Col>\r\n                        \r\n                       <Col md={{size: 4, offset: 1}}>\r\n                           {this.showDetails(this.state.selectedFile)}\r\n                       </Col>\r\n\r\n                      <p className='pt-2' style={{fontSize: '13px'}}>\r\n                        * Proofs can be of any form such as audio, video, document and image. It should not contain inappropriate content\r\n                      </p>\r\n                  \r\n                  </Row>\r\n\r\n                   <Row className='mt-4 p-2'>\r\n                       <Button type='submit' className='btn btn-success'>\r\n                          <span className='fa fa-paper-plane fa-lg'></span> Proceed\r\n                        </Button>\r\n                   </Row>\r\n\r\n                </LocalForm>\r\n              </div>\r\n\r\n            <Modal isOpen={this.state.isOpen}>\r\n              <ModalHeader>Confirmation</ModalHeader>\r\n              <ModalBody>\r\n                <Table className='m-2 p-2'>\r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>UserID: </b></td> <td> { new Cookies().get('userid') } </td> \r\n                  </tr>\r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>Issue ID:</b></td> <td> { this.state.id } </td>\r\n                  </tr>  \r\n                  <tr className='m-2 p-2'>\r\n                    <td><b>Service:</b></td> <td> { this.state.values.service } </td>\r\n                  </tr>  \r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>Area of complaint:</b></td> \r\n                     <td> { this.state.values.dept } </td>\r\n                  </tr> \r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>Subject: </b></td> <td> {this.state.values.sub} </td>\r\n                  </tr>\r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>Issue:</b></td> <td> {this.state.values.issue} </td>\r\n                  </tr> \r\n                  <tr className='m-2 p-2'>\r\n                     <td><b>Proof:</b></td> <td> {this.state.values.proof? \"Yes\": \"No\"} </td>\r\n                  </tr> \r\n                </Table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color='danger' onClick={() => this.handleFinalSubmit()}> Confirm</Button>\r\n              </ModalFooter>\r\n          </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Complain;","import React, { Component } from 'react';\r\nimport {Row, Col, Label, Button } from 'reactstrap';\r\nimport { LocalForm, Errors, Control } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !(val) || !isNaN(val);\r\nconst validEmail = (email) => {\r\n   return !(email) || /^[A-Za-z0-9._%+-]+@[A-za-z0-9.-]+\\.[A-Za-z]{2,4}$/i.test(email)\r\n};\r\n\r\n\r\nclass Contact extends Component \r\n{\r\n    constructor(props){\r\n       super(props);\r\n    }\r\n\r\n    handleSubmit(values)\r\n    {\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className='container p-3'>\r\n\r\n              <div className='mt-4'>\r\n                <h3 className='pl-5'>Contact Us</h3> <hr />    \r\n              </div>\r\n             \r\n              <div className='row row-content p-5'>\r\n                 <div className='col-7'>\r\n                    <h4> Location Address</h4>\r\n\r\n                   <div className=''>\r\n                     <address className='mt-4' style={{fontSize: '20px'}}>\r\n                         Public Grievance Redressal System, block 1/23, <br />\r\n                         Karl Marx Road, <br />\r\n                         Chennai City.\r\n                     </address>\r\n                      <p><b>Helpline:</b> +91 4343434343 /+91 5353535353 </p>\r\n                      <p><b>Email Address:</b> pgrshelpline@chennai.gov.in</p>\r\n                   </div>\r\n                </div>\r\n                \r\n                <div className='col-5'>\r\n                    <h4>Follow Us</h4>\r\n                    <div className=\"col-12 mt-4\">\r\n                        <a className='p-2' href=\"http://google.com/\"><i className=\"fa fa-google fa-lg\"></i></a>\r\n                        <a className='p-2' href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook fa-lg\"></i></a>\r\n                        <a className='p-2' href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin fa-lg\"></i></a>\r\n                        <a className='p-2' href=\"http://twitter.com/\"><i className=\"fa fa-twitter fa-lg\"></i></a>\r\n                        <a className='p-2' href=\"http://youtube.com/\"><i className=\"fa fa-youtube fa-lg\"></i></a>\r\n                        <a className='p-2' href=\"mailto:\"><i className=\"fa fa-envelope-o fa-lg\"></i></a>\r\n                    </div>\r\n                \r\n               </div>\r\n             </div>\r\n\r\n             <div className='row row-content mt-3'>\r\n\r\n                  <div className=\"col-12\"> <h3>Send Your Feedback</h3> </div>   \r\n\r\n                  <div className=\"col-12 col-md-9 mt-3\">\r\n\r\n                    <LocalForm model='feedback' className=\"my-4\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                           <Row className=\"form-group p-2\">\r\n                               <Label htmlFor=\"firstname\" md={2} >First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Firstname\"  \r\n                                    validators = {{\r\n                                       required, \r\n                                       minLength: minLength(3),\r\n                                       maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                   <Errors className=\"text-danger\" model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 letters',\r\n                                            maxLength: 'Must be lesseer than 11 letters'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group p-2\">\r\n                               <Label htmlFor=\"lastname\" md={2} >Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\"Lastname\" \r\n                                    className=\"form-control\" \r\n                                    validators = {{\r\n                                        required, \r\n                                        minLength: minLength(3),\r\n                                        maxLength: maxLength(15)\r\n                                     }}\r\n                                     />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 letters',\r\n                                             maxLength: 'Must be lesseer than 11 letters'\r\n                                         }}\r\n                                     />\r\n                                </Col>\r\n                           </Row>\r\n\r\n\r\n                           <Row className=\"form-group p-2\">\r\n                               <Label htmlFor=\"email\" md={2} >Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    />\r\n\r\n                                    <Errors className=\"text-danger\" \r\n                                       model=\".email\"\r\n                                       show='touched'\r\n                                       messages={{\r\n                                          required: 'Required',\r\n                                          validEmail: 'Invalid email address'\r\n                                       }}\r\n                                    />\r\n                                </Col>\r\n                           </Row>\r\n\r\n                          <Row className=\"form-group p-2\">\r\n                               <Label htmlFor=\"message\" md={2}> Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" type='textarea' name=\"message\" rows=\"8\"\r\n                                    placeholder=\"Comments here...\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group pt-2\">\r\n                               <Col md={{size: 2, offset: 10}}  >\r\n                                   <Button type=\"submit\" color=\"primary\" className=''>\r\n                                       Submit here\r\n                                   </Button>\r\n                               </Col>\r\n                           </Row>\r\n                    </LocalForm>\r\n                  </div>\r\n               </div>\r\n\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Media } from 'reactstrap';\r\n\r\nclass About extends Component \r\n{\r\n    constructor(props){\r\n       super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div  className='container p-3'>\r\n\r\n               <div className='mt-3'>\r\n                  <h3 className='pl-5'>About Us</h3>  <hr/>\r\n               </div>\r\n\r\n               <div className=\"row row-content\">\r\n                  <div className=\"col-12 p-3\">\r\n                     <h4>Third Eye - A Public Grievance Redressal System</h4>\r\n                     <div className='mt-4' style={{textAlign: 'justify'}}>\r\n                        <p>\r\n                           It's an initiative by the Government with the intention to address the public complaints and \r\n                           issues raised by common people and ensure that they are satisfied with the services provided by\r\n                           the Goverment. \r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n             </div>\r\n\r\n             <div className='py-3'>\r\n                 <h4 className='pt-3'> How We Solve</h4>\r\n\r\n                 <img src='/assets/process-2.PNG' alt='' className='p-3' />\r\n\r\n             </div>\r\n\r\n             <div className='col-12 mt-3'>\r\n                  <h3 className='pl-5'>FAQ's</h3>  <hr/>\r\n             </div>\r\n\r\n             <div className='row row-content'>\r\n                   \r\n             </div>\r\n\r\n         \r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalHeader, Row, Label, Button, Card, CardBody } from 'reactstrap';\r\n\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { HiStatusOnline } from 'react-icons/hi';\r\nimport { MdFeedback } from 'react-icons/md';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport { AiOutlineFile } from 'react-icons/ai';\r\n\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nimport Cookies from 'universal-cookie';\r\nimport FileViewer from 'react-file-viewer';\r\nvar mimetypes = require('mime-types');\r\n\r\nclass Converse extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           isOpen: false,\r\n           props: props\r\n        };\r\n    }\r\n\r\n    toggleFileViewer() {\r\n       this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n       this.props.postUserReply(this.state.props.fetched.userid, this.state.props.fetched.issueid, values.comment);\r\n    }\r\n\r\n    componentDidMount() {\r\n      const cookies = new Cookies();\r\n      \r\n      setInterval(() => {\r\n        this.props.fetchReply(cookies.get('userid'))\r\n       }, 100000);\r\n    }\r\n\r\n\r\n    handleFinal(flag) {\r\n\r\n       var conf = window.confirm(\"Are you sure want to proceed ?\");\r\n       if(!conf) return;\r\n\r\n       if(flag) {\r\n          this.props.handleWithdraw(this.state.props.fetched.userid, this.state.props.fetched.issueid);\r\n       }\r\n    }\r\n    \r\n\r\n    renderLeft(fetch) {\r\n\r\n      return (\r\n        <div className='p-3' style={{height: '550px', borderRight: '2px solid #a3a3a5'}}>\r\n\r\n           <h4># Issue ID {fetch.issueid}</h4> \r\n            <dl className='pt-3'>\r\n              <dt><BiUserCircle /> Raised by </dt> <dd>{fetch.userid}</dd>\r\n              <dt><i className='fa fa-bolt'></i> Subject</dt> <dd>{fetch.sub}</dd>\r\n              <dt><MdFeedback /> Summary </dt>  <dd>{fetch.issue}</dd>\r\n              <dt><FiClock /> Raised on </dt>  \r\n              <dd>{new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                        .format(new Date(fetch.date))} </dd>\r\n              <dt><HiStatusOnline /> Status </dt> \r\n              <dd>\r\n                 { (fetch.status === 'pending')? <i className='fa fa-spinner text-primary'></i>: <i className='fa fa-check-circle text-green'></i> } {' '}\r\n                 <span className='p-2'> { fetch.status.toUpperCase() }  </span>\r\n              </dd>\r\n\r\n              <dt>Proof</dt>\r\n              <dd>\r\n                 <a onClick={() => this.toggleFileViewer()}> <AiOutlineFile /> {fetch.proof.name} </a> <br />\r\n                   <p className='text-primary py-2' onClick={() => this.toggleFileViewer()}>&#62; <u> Tap to Open...</u></p>\r\n\r\n                    \r\n                   <Modal size='lg' isOpen={this.state.isOpen} toggle={() => this.toggleFileViewer()}>\r\n                      <ModalHeader>{fetch.proof.name}</ModalHeader>\r\n                       <ModalBody>\r\n                        <div className='p-2' style={{height: '550px', overflow: 'scroll'}}>\r\n                           <FileViewer \r\n                              fileType={ mimetypes.extension(fetch.proof.type) }\r\n                              filePath={fetch.proof.path}\r\n                           />\r\n                        </div>\r\n                       </ModalBody>\r\n                  </Modal>\r\n              </dd>\r\n            </dl>\r\n\r\n            <div className='p-2' hidden={!this.state.props.reply.closed}>\r\n                <h4><span className='fa fa-check-circle fa-lg'></span> Closed</h4>\r\n            </div>\r\n         </div>\r\n       );\r\n    }\r\n\r\n    renderRight(reply) {\r\n\r\n      //if(reply.converse.length() === 0)\r\n        //  return(<div></div>);\r\n\r\n      return (\r\n         <div className='p-3'>\r\n            <h4>Conversation </h4>\r\n\r\n            <div className='pt-3'>\r\n                <div className='' style={{ height:'500px', overflowY: 'scroll' }}>    \r\n\r\n                   {          \r\n                       reply.convers.map((conv) => {\r\n                         if(conv.id !== this.state.props.fetched.userid)\r\n                               return (\r\n                                 <div className='my-4'>\r\n                                 <Card className='cview1' style={{width: '400px', borderRadius: '20px'}}>\r\n                                    <CardBody>\r\n                                       <div>\r\n                                           <h6 className='text-primary'>{conv.id}</h6> \r\n                                       </div>\r\n                                       <div>\r\n                                          {conv.msg}\r\n                                         <div className='d-flex justify-content-end text-secondary' style={{fontSize: 13}}>\r\n                                           {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                              .format(new Date(conv.date))}</div>\r\n                                       </div>\r\n                                    </CardBody>\r\n                                 </Card>\r\n                                 </div>\r\n                               );\r\n                          \r\n                          else\r\n                            return (\r\n                              <div className='d-flex justify-content-end my-4'>\r\n                                <Card className='cview1' style={{width: '400px', borderRadius: '20px', backgroundColor: 'lightgreen'}}>\r\n                                <CardBody>\r\n                                    <div>\r\n                                        <h6 className='text-success'>{conv.id}</h6> \r\n                                    </div>\r\n                                    <div>\r\n                                       {conv.msg}\r\n                                      <div className='d-flex justify-content-end text-secondary' style={{fontSize: 13}}>\r\n                                        {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                          .format(new Date(conv.date))}</div>\r\n                                    </div>\r\n                                </CardBody>\r\n                              </Card>\r\n                             </div>\r\n                            );\r\n                        })  \r\n                   }\r\n                 \r\n                 <div className='p-2' hidden={!reply.closed}>\r\n                    <h6><span className='fa fa-check-circle fa-lg'></span> Closed Conversation...</h6>\r\n                 </div>\r\n\r\n                </div>\r\n\r\n                <LocalForm className='pt-3' onSubmit={(values) => this.handleSubmit(values)}>\r\n                  <Row>\r\n                    <Label htmlFor='comment' className='py-1'> <h6> Your Reply </h6> </Label>\r\n                    <Control.textarea model='.comment' className='form-control' placeholder=\"Type something...\" \r\n                        rows={5} type='textarea' disabled={this.state.props.reply.closed}\r\n                    />\r\n                  </Row>\r\n                  \r\n                  <div className='pt-2 d-flex justify-content-end'>\r\n                    <Button type='submit' color='primary'>\r\n                      <span className='fa fa-paper-plane'></span> Proceed \r\n                    </Button>\r\n                  </div>\r\n                </LocalForm>\r\n            </div>\r\n         </div>\r\n      );\r\n    }\r\n\r\n    goBack() {\r\n      window.history.back();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      return(\r\n        <div className='container-fluid p-5' style={{height: 'auto'}}>\r\n\r\n         <div className='row'> \r\n           <div className='col-md-10'>\r\n               <h3> \r\n                <i className='fa fa-angle-left' onClick={() => this.goBack()}></i> {' '}\r\n                {this.state.props.fetched.sub}\r\n               </h3>\r\n          </div>\r\n\r\n          <div className='col-md-2'>\r\n              <Button color='danger' disabled={this.state.props.reply.closed} onClick={() => this.handleFinal(true) }> \r\n                  <span className='fa fa-undo'></span> Withdraw\r\n              </Button>\r\n          </div>\r\n        </div><hr/>\r\n\r\n          <div className='row row-content'>\r\n              <div className='col-12 col-md-5'>\r\n                  { this.renderLeft(this.state.props.fetched) }\r\n              </div>\r\n              <div className='col-12 col-md-7'>\r\n                { this.renderRight(this.state.props.reply) }\r\n              </div>\r\n          </div>\r\n\r\n        </div>\r\n      ); \r\n    }\r\n}\r\n\r\nexport default Converse;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//userDash\r\nexport const userDash = (email) => (dispatch) => {\r\n    \r\n     let obj = {email: email};\r\n\r\n     return fetch(baseUrl + 'userDash', {\r\n         method: 'POST',\r\n         body: JSON.stringify(obj),\r\n         headers: {\r\n             'Content-type': 'application/json'\r\n         },\r\n         credentials: 'same-origin'\r\n     })\r\n     .then(res => {\r\n         if(res.ok)\r\n           return res;\r\n         else {\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr) \r\n          dispatch(addUserDash(res.data))\r\n    })\r\n    .catch(err => alert(err));\r\n};\r\n\r\nexport const addUserDash = (res) => ({\r\n     type: ActionTypes.ADD_USER_DASH,\r\n     payload: res \r\n});\r\n\r\n//userDash\r\nexport const empDash = (deptid) => (dispatch) => {\r\n    \r\n    let obj = {deptid: deptid};\r\n\r\n    return fetch(baseUrl + 'empDash', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) \r\n         dispatch(addEmpDash(res.data))\r\n   })\r\n   .catch(err => alert(err));\r\n};\r\n\r\nexport const addEmpDash = (res) => ({\r\n    type: ActionTypes.ADD_EMP_DASH,\r\n    payload: res \r\n});\r\n\r\n\r\n// postComplaint\r\nexport const postComplaint = (fdata) => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'postComplaint', {\r\n        method: 'POST',\r\n        body: fdata,\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n       if(res.ok)\r\n           return res;\r\n       else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr)\r\n         alert(res.msg);\r\n    })\r\n    .catch(err => alert(err)); \r\n};\r\n\r\n\r\n//fetchRaised\r\nexport const fetchRaised = (email) => (dispatch) => {\r\n    \r\n    var obj = {email: email};\r\n\r\n    return fetch(baseUrl + 'raised', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n           return res;\r\n        else {\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error; \r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr) {\r\n            //console.log(JSON.stringify(res.data));\r\n            dispatch(addRaised(res.data))\r\n        }\r\n        else\r\n          dispatch(errRaised(res.errMess))\r\n    })\r\n    .catch(err => alert(err));\r\n};\r\n\r\nexport const addRaised = (res) => ({\r\n     type: ActionTypes.ADD_RAISED,\r\n     payload: res\r\n});\r\n\r\nexport const errRaised = (err) => ({\r\n    type: ActionTypes.ERR_RAISED,\r\n    payload: err\r\n});\r\n\r\n\r\n//fetchPending\r\nexport const fetchPending = (email) => (dispatch) => {\r\n     \r\n    var obj = {email: email};\r\n\r\n    return fetch(baseUrl + 'pending', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n           'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n           return res;\r\n        else {\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error; \r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr) {\r\n            //console.log(JSON.stringify(res.data));\r\n            dispatch(addPending(res.data))\r\n        }\r\n        else\r\n          dispatch(errPending(res.errMess))\r\n    })\r\n    .catch(err => alert(err));\r\n};\r\n\r\nexport const addPending = (res) => ({\r\n    type: ActionTypes.ADD_PENDING,\r\n    payload: res\r\n});\r\n\r\nexport const errPending = (err) => ({\r\n   type: ActionTypes.ERR_PENDING,\r\n   payload: err\r\n});\r\n\r\n\r\n//fetchResolved\r\nexport const fetchResolved = (email) => (dispatch) => {\r\n     \r\n    var obj = {email: email};\r\n\r\n    return fetch(baseUrl + 'resolved', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n           'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n           return res;\r\n        else {\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error; \r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr) {\r\n            //console.log(JSON.stringify(res.data));\r\n            dispatch(addResolved(res.data))\r\n        }\r\n        else\r\n          dispatch(errResolved(res.errMess))\r\n    })\r\n    .catch(err => alert(err));\r\n};\r\n\r\nexport const addResolved = (res) => ({\r\n    type: ActionTypes.ADD_RESOLVED,\r\n    payload: res\r\n});\r\n\r\nexport const errResolved = (err) => ({\r\n   type: ActionTypes.ERR_RESOLVED,\r\n   payload: err\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n//fetchReceived\r\nexport const fetchReceived = (deptid) => (dispatch) => {\r\n    \r\n     let obj = { deptid: deptid };\r\n\r\n     return fetch(baseUrl + 'getReceived', {\r\n         method: 'POST',\r\n         body: JSON.stringify(obj),\r\n         headers: {\r\n             'Content-type': 'application/json'\r\n         },\r\n         credentials: 'same-origin'\r\n     })\r\n     .then(res => {\r\n         if(res.ok)\r\n           return res;\r\n         else {\r\n            var error = new Error('Error :'+res.status+': '+res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    }, error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        if(!res.isErr) {\r\n         // alert(JSON.stringify(res.data));\r\n          dispatch(addReceived(res.data))\r\n        }\r\n    })\r\n    .catch(err => errReceived(err));\r\n};\r\n\r\nexport const addReceived = (res) => ({\r\n     type: ActionTypes.ADD_RECEIVED,\r\n     payload: res \r\n});\r\n\r\nexport const errReceived = (err) => ({\r\n    type: ActionTypes.ERR_RECEIVED,\r\n    payload: err\r\n});\r\n\r\n\r\n\r\n//fetchEmpResolved\r\nexport const fetchEmpResolved = (deptid) => (dispatch) => {\r\n    \r\n    let obj = {deptid: deptid};\r\n\r\n    return fetch(baseUrl + 'getEmpResolved', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) \r\n         dispatch(addEmpResolved(res.data))\r\n   })\r\n   .catch(err => errEmpResolved(err));\r\n};\r\n\r\nexport const addEmpResolved = (res) => ({\r\n    type: ActionTypes.ADD_EMP_RESOLVED,\r\n    payload: res \r\n});\r\n\r\nexport const errEmpResolved = (err) => ({\r\n   type: ActionTypes.ERR_EMP_RESOLVED,\r\n   payload: err\r\n});\r\n\r\n\r\n//postEmpReply\r\nexport const postEmpReply = (empid, deptid, userid, issueid, msg ) => (dispatch) => {\r\n    \r\n    let obj = { \r\n       empid: empid, userid: userid, \r\n       issueid: issueid, msg: msg\r\n    };\r\n\r\n    return fetch(baseUrl + 'postEmpReply', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n         alert(\"Posted successfully...\");\r\n         dispatch(fetchEmpReply(deptid))\r\n       }\r\n   })\r\n   .catch(err => alert(err));\r\n};\r\n\r\n\r\n//postUserReply\r\nexport const postUserReply = (userid, issueid, msg ) => (dispatch) => {\r\n    \r\n    let obj = { userid: userid, issueid: issueid, msg: msg};\r\n\r\n    return fetch(baseUrl + 'postUserReply', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n         alert(\"Posted successfully...\");\r\n         dispatch(fetchUserReply(userid))\r\n       }\r\n   })\r\n   .catch(err => alert(err));\r\n};\r\n\r\n\r\n\r\n\r\n//fetchUserReply\r\nexport const fetchUserReply = (userid) => (dispatch) => {\r\n\r\n    let obj = { userid: userid };\r\n\r\n    return fetch(baseUrl + 'getUserReply', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n        // console.log(JSON.stringify(res.data));\r\n         dispatch(addUserReply(res.data))\r\n       }\r\n   })\r\n   .catch(err => alert(err));\r\n};\r\n\r\n\r\nexport const addUserReply = (res) => ({\r\n    type: ActionTypes.ADD_USER_REPLY,\r\n    payload: res\r\n});\r\n\r\nexport const fetchEmpReply = (deptid) => (dispatch) => {\r\n\r\n    let obj = { deptid: deptid };\r\n\r\n    return fetch(baseUrl + 'getEmpReply', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n        // console.log(JSON.stringify(res.data));\r\n         dispatch(addEmpReply(res.data))\r\n       }\r\n   })\r\n   .catch(err => alert(err));\r\n};\r\n\r\nexport const addEmpReply = (res) => ({\r\n    type: ActionTypes.ADD_EMP_REPLY,\r\n    payload: res\r\n})\r\n\r\n\r\n\r\n\r\n//handleResolve\r\nexport const handleResolve = (uid, issid, empid, did) => (dispatch) => {\r\n   \r\n    let obj = { userid: uid, issueid: issid, empid: empid, deptid: did };\r\n\r\n    return fetch(baseUrl + 'handleResolve', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n         alert(\"Closed successfully...\");\r\n         dispatch(fetchEmpReply(did))\r\n       }\r\n   })\r\n   .catch(err => alert(err));\r\n\r\n};\r\n\r\n\r\n//handleIgnore\r\nexport const handleIgnore = (uid, issid, empid, did) => (dispatch) => {\r\n  \r\n    let obj = { userid: uid, issueid: issid, empid: empid, deptid: did };\r\n\r\n    return fetch(baseUrl + 'handleIgnore', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n          alert(\"Closed successfully...\");\r\n          dispatch(fetchEmpReply(did))\r\n       }\r\n   })\r\n   .catch(err => alert(err));   \r\n};\r\n\r\n\r\n//handleSuggested\r\nexport const handleSuggested = (uid, issid, empid, did) => (dispatch) => {\r\n  \r\n    let obj = { userid: uid, issueid: issid, empid: empid, deptid: did };\r\n\r\n    return fetch(baseUrl + 'handleSuggested', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n          alert(\"Closed successfully...\");\r\n          dispatch(fetchEmpReply(did))\r\n       }\r\n   })\r\n   .catch(err => alert(err));   \r\n};\r\n\r\n\r\n//handleWithdraw\r\nexport const handleWithdraw = (uid, issid) => (dispatch) => {\r\n  \r\n    let obj = { userid: uid, issueid: issid };\r\n\r\n    return fetch(baseUrl + 'handleWithdraw', {\r\n        method: 'POST',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(res => {\r\n        if(res.ok)\r\n          return res;\r\n        else {\r\n           var error = new Error('Error :'+res.status+': '+res.statusText);\r\n           error.response = res;\r\n           throw error;\r\n       }\r\n   }, error => {\r\n       var errmess = new Error(error.message);\r\n       throw errmess;\r\n   })\r\n   .then(res => res.json())\r\n   .then(res => {\r\n       if(!res.isErr) {\r\n          alert(\"Withdrawn successfully...\");\r\n          dispatch(fetchUserReply(uid))\r\n       }\r\n   })\r\n   .catch(err => alert(err));   \r\n};","import React, { Component } from 'react';\r\n\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Complain from './ComplainComponent';\r\nimport Contact from '../ContactComponent';\r\nimport About from '../AboutComponent';\r\nimport Converse from './ConverseComponent';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchDepartments, fetchProfile } from '../../redux/ActionCreator';\r\nimport { userDash, postComplaint, fetchRaised, fetchPending, fetchResolved } from '../../redux/ActionCreator2';\r\nimport { fetchUserReply, handleWithdraw, postUserReply } from '../../redux/ActionCreator3';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        departments: state.departments,\r\n        profile: state.profile,\r\n        userdash: state.userdash,\r\n        raised: state.raised,\r\n        pending: state.pending,\r\n        resolved: state.resolved,\r\n        reply: state.userreply\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n      \r\n      fetchDepartments: () => { dispatch(fetchDepartments()) },\r\n\r\n      fetchProfile: (email) => { dispatch(fetchProfile(email)) },\r\n\r\n      userDash: (email) => { dispatch(userDash(email)) },\r\n\r\n      postComplaint: (fdata) => { dispatch(postComplaint(fdata)) },\r\n\r\n      fetchRaised: (email) => { dispatch(fetchRaised(email)) },\r\n\r\n      fetchPending: (email) => { dispatch(fetchPending(email)) },\r\n\r\n      fetchResolved: (email) => { dispatch(fetchResolved(email)) },\r\n\r\n      postUserReply: (userid, issueid, msg) => { dispatch(postUserReply(userid, issueid, msg)) },\r\n\r\n      fetchUserReply: (userid) => { dispatch(fetchUserReply(userid)) },\r\n\r\n      handleWithdraw: (uid, issid) => { dispatch(handleWithdraw(uid, issid)) }\r\n});\r\n\r\n\r\nclass Main2 extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n       const cookies = new Cookies();\r\n\r\n       this.props.fetchDepartments(cookies.get('userid'));\r\n       this.props.fetchProfile(cookies.get('userid'));\r\n\r\n       this.props.userDash(cookies.get('userid'));\r\n       this.props.fetchRaised(cookies.get('userid'));\r\n       this.props.fetchPending(cookies.get('userid'));\r\n       this.props.fetchResolved(cookies.get('userid'));\r\n       this.props.fetchUserReply(cookies.get('userid'));\r\n    }\r\n    \r\n\r\n     render(){    \r\n\r\n        const Homepage = () => {\r\n           return (\r\n             <Home \r\n                isErr = {this.props.userdash.isErr}\r\n                dash = {this.props.userdash.data}\r\n                raisedErr = {this.props.raised.isErr}\r\n                raisedErrMess = {this.props.raised.errMess}\r\n                raisedData = {this.props.raised.data}\r\n                pendingErr = {this.props.pending.isErr}\r\n                pendingErrMess = {this.props.pending.errMess}\r\n                pendingData = {this.props.pending.data}\r\n                resolvedErr = {this.props.resolved.isErr}\r\n                resolvedErrMess = {this.props.resolved.errMess}\r\n                resolvedData = {this.props.resolved.data}\r\n             />\r\n           );\r\n        };\r\n\r\n        const ComplaintPage = () => {\r\n            return(\r\n                <Complain dept={this.props.departments.data} \r\n                    postComplaint = {this.props.postComplaint}\r\n                />\r\n            );\r\n        };\r\n\r\n        const ConversePage = ({match}) => {\r\n            return(\r\n               <Converse \r\n                  fetched={ this.props.raised.data.filter((issue) => issue.issueid === match.params.issueid)[0] }\r\n                  reply = { this.props.reply.data.filter((re) => re.issueid === match.params.issueid)[0] }\r\n                  postUserReply = { this.props.postUserReply } \r\n                  fetchReply = { this.props.fetchUserReply }\r\n               />\r\n            );\r\n        };\r\n\r\n        return(\r\n            <div className=\"App\">\r\n               <Header \r\n                   isLogin = {this.props.profile.isLogin}\r\n                   udata={this.props.profile.data}\r\n                   errMess={this.props.profile.errMess}\r\n               />\r\n                 \r\n                 <Switch>\r\n                   <Route path='/user/home' component= {Homepage} />\r\n                   <Route path='/user/complain' component={ComplaintPage} />\r\n                   <Route  path='/user/contact' component={() => <Contact /> } />\r\n                   <Route  path='/user/about' component={() => <About /> } />\r\n                   <Route exact path='/user/:issueid' component={ConversePage} />\r\n                   <Redirect to='/user/home' />\r\n                 </Switch>\r\n\r\n               <Footer />\r\n            </div>\r\n        );\r\n     }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Main2));","import React, { Component } from 'react';\r\nimport { Jumbotron, Card, CardBody, Row, Col, ListGroup, ListGroupItem, ListGroupItemHeading,\r\n  ListGroupItemText, Badge, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\r\n\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { GoIssueOpened } from 'react-icons/go';\r\nimport { HiStatusOnline } from 'react-icons/hi';\r\nimport { MdFeedback } from 'react-icons/md';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport { AiFillLike, AiFillRocket, AiOutlineFile } from 'react-icons/ai';\r\nimport { IoMdList } from 'react-icons/io';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Nav } from 'react-bootstrap';\r\nimport FileViewer from 'react-file-viewer';\r\nvar mimetypes = require('mime-types');\r\n\r\n\r\nclass Home2 extends Component {\r\n    \r\n     constructor(props) {\r\n         super(props);\r\n\r\n         this.state = {\r\n            fetched: null,\r\n            openModal: false\r\n         };\r\n          \r\n         this.handleClick = this.handleClick.bind(this);\r\n         this.byDefault = this.byDefault.bind(this);\r\n     }\r\n\r\n     handleClick(fetch) {\r\n       this.setState ({ fetched: fetch });\r\n     } \r\n\r\n    byDefault() {\r\n       this.setState ({ fetched: null });\r\n    }\r\n\r\n    toggleFileViewer() {\r\n       this.setState ({ openModal: !this.state.openModal });\r\n    }\r\n\r\n\r\n    renderData(fetched) {\r\n\r\n        if(fetched === null)\r\n          return (\r\n            <div className='mt-5 pt-5' >\r\n              <div className='d-flex justify-content-center pt-3'>\r\n                 <img src='/assets/thirdeye.png' alt='Third eye' style={{opacity: '0.3', borderRadius: '50%', height: '70px', width: '70px'}} />\r\n               </div> <br/>\r\n               <h5 className='d-flex justify-content-center'> No Item is Selected... </h5> \r\n            </div>\r\n          );\r\n        else\r\n          return (\r\n             <div className='pt-3 pl-4'>\r\n                 \r\n                 <div className='row'>\r\n                    <h4 className='col-md-8'> {fetched.sub} </h4> \r\n                    <span className='col-md-4'>\r\n                       { (fetched.status === 'resolved')? <i className='fa fa-check-circle fa-lg text-success'></i> :\r\n                          <i className='fa fa-spinner fa-lg text-primary'></i> }\r\n                    </span>\r\n                </div> <hr/>\r\n\r\n                <dl>\r\n                <dt><GoIssueOpened /> Issue Id </dt> <dd>{fetched.issueid}</dd>\r\n                <dt><BiUserCircle /> Raised by </dt> <dd>{fetched.userid}</dd>\r\n                <dt><MdFeedback /> Summary </dt>  <dd>{fetched.issue}</dd>\r\n                <dt><FiClock /> Raised on </dt>  \r\n                <dd>{new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                          .format(new Date(fetched.date))} </dd>\r\n\r\n                <dt>Proof</dt>\r\n                <dd>\r\n                   <a onClick={() => this.toggleFileViewer()}> <AiOutlineFile /> {fetched.proof.name} </a> <br />\r\n                   <p className='text-primary py-2' onClick={() => this.toggleFileViewer()}>&#62; <u> Tap to Open...</u></p>\r\n\r\n                    \r\n                   <Modal size='lg' isOpen={this.state.openModal} toggle={() => this.toggleFileViewer()}>\r\n                      <ModalHeader>{fetched.proof.name}</ModalHeader>\r\n                       <ModalBody>\r\n                        <div className='p-2' style={{height: '550px', overflow: 'scroll'}}>\r\n                           <FileViewer \r\n                              fileType={ mimetypes.extension(fetched.proof.type) }\r\n                              filePath={fetched.proof.path}\r\n                           />\r\n                        </div>\r\n                       </ModalBody>\r\n                  </Modal>\r\n                </dd>\r\n\r\n                <dt><HiStatusOnline /> Status </dt> \r\n                <dd>\r\n                 { (fetched.status === 'pending')? <i className='fa fa-spinner text-primary'></i>: <i className='fa fa-check-circle text-success'></i> } {' '}\r\n                 <span className='p-2'> { fetched.status.toUpperCase() }  </span>\r\n                </dd>\r\n\r\n                <dt></dt>\r\n                <dd className='pt-3'>\r\n                  <Link to={`/emp/${fetched.issueid}`}> <i className='fa fa-angle-double-right'></i> Tap for More info </Link> \r\n                </dd>\r\n\r\n               </dl>\r\n             </div>\r\n          );\r\n     }\r\n\r\n\r\n    renderList(fetched, isErr, errMess) {\r\n       \r\n      if(isErr) \r\n         return ( <div>{errMess}</div> );\r\n      \r\n      else if (fetched.length === 0)\r\n         return (\r\n            <div className='m-5 p-5'> <p> Not Available </p>  </div>\r\n         );\r\n\r\n      else\r\n      { \r\n       return(\r\n         <> <ListGroup>\r\n           {\r\n              fetched.map((fetch) => {\r\n                \r\n              return(\r\n                <div>\r\n                  <ListGroupItem active={this.state.fetched === null || this.state.fetched.issueid !== fetch.issueid}\r\n                        style={{height: '110px', margin: '2px 0 3px 0'}} color='primary'\r\n                        onClick={() => this.handleClick(fetch)}>\r\n                        <ListGroupItemHeading className='row'>\r\n                            <div className='col-9'> {fetch.sub} </div>\r\n                            <div className='col-3'>\r\n                              <Badge> {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric'}).format(new Date(fetch.date))} </Badge>\r\n                            </div>\r\n                        </ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <p> Issue No. {fetch.issueid} </p>\r\n                            <span className='pt-1'>\r\n                               {(fetch.status.toUpperCase() ==='RESOLVED')? <i className='fa fa-check-circle'></i>\r\n                                : <i className='fa fa-spinner'></i>} {' '} {fetch.status.toUpperCase()}\r\n                           </span>\r\n                        </ListGroupItemText>\r\n                  </ListGroupItem>             \r\n                 </div>\r\n                );\r\n             })\r\n           }\r\n          </ListGroup> </>\r\n       );\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n    \r\n      return(\r\n          <div className=''>\r\n              <Jumbotron className='py-5'>\r\n                <div className='container'>\r\n                   <div className='col-12'>\r\n                     <h4 className='row justify-content-center'>DASHBOARD</h4>\r\n                      <h4 className='mt-4'>MY JOBS</h4>\r\n\r\n                      <div className='row mt-4'>\r\n                          <div className='col-md-3 p-1'>\r\n                            <div>\r\n                              <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}}>\r\n                                <CardBody className='row pl-4 pt-4'>\r\n                                <AiFillRocket className='col-3 mt-2' size='md' />\r\n                                <span className='col-9'>\r\n                                  Received <p style={{fontSize: '25px', color: '#CC0000'}}> \r\n                                       { this.props.dash.received }\r\n                                    </p>\r\n                                </span>\r\n                                </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className='col-md-3 p-1'>\r\n                            <div>\r\n                            <Card className='cview1 px-2' style={{borderRadius: '20px', width: '250px'}}>\r\n                              <CardBody className='row pl-4 pt-4'>\r\n                              <AiFillLike className='col-3 mt-2' size='md' />\r\n                                <span className='col-9'>\r\n                                  Resolved <p style={{fontSize: '25px', color: '#1d8f4a'}}> \r\n                                    { this.props.dash.resolved }\r\n                                  </p>\r\n                                </span>\r\n                              </CardBody>\r\n                            </Card>\r\n                            </div>\r\n                          </div>\r\n                       </div>\r\n                    </div>\r\n                  </div>\r\n              </Jumbotron>\r\n\r\n              <Tab.Container defaultActiveKey=\"first\">\r\n                <div className='row row-content py-5'>\r\n                    <Nav variant=\"pills\" className=\"flex-row justify-content-center\">\r\n                      <Nav.Item>\r\n                          <Nav.Link eventKey=\"first\" onClick={this.byDefault}>Received By Us</Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                          <Nav.Link eventKey=\"second\" onClick={this.byDefault}>Resolved By Us</Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                </div>\r\n\r\n                <Row className='py-3 px-5'>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"first\" style={{height: '700px'}}>\r\n                          <Row> \r\n                            <div> <h5> # RECEIVED BY US </h5> <hr/></div>\r\n                          </Row>\r\n                          <Row className='mt-4'>\r\n                            <Col md={5}>\r\n                             <div className='mylist'>\r\n                               { this.renderList(this.props.receivedData, this.props.isReceivedErr, this.props.receivedErrMess) }  \r\n                             </div>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                              <div className='px-4 py-1'>  \r\n                                { this.renderData(this.state.fetched) }\r\n                               </div>\r\n                            </Col>\r\n                          </Row>\r\n                      </Tab.Pane>\r\n\r\n                      <Tab.Pane eventKey=\"second\" style={{height: '700px'}}>\r\n                          <Row> \r\n                            <div> <h5> # RESOLVED BY US</h5> <hr/> </div>\r\n                          </Row>\r\n                          <Row className='mt-4'>\r\n                            <Col md={5}>\r\n                            <div className='mylist'>\r\n                              { this.renderList(this.props.resolvedData, this.props.isResolvedErr, this.props.resolvedErrMess) }                             \r\n                            </div>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                              <div className='px-4 py-1'>  \r\n                                { this.renderData(this.state.fetched) }  \r\n                              </div>                            \r\n                            </Col>\r\n                          </Row>\r\n                      </Tab.Pane>\r\n                    \r\n                    </Tab.Content>\r\n                </Row>\r\n            </Tab.Container>\r\n\r\n\r\n          </div>\r\n        );\r\n     }\r\n}\r\n\r\nexport default Home2;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavItem, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nclass Header extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           isOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n   toggleModal() {\r\n      this.setState({\r\n         isOpen: !this.state.isOpen\r\n      });\r\n   }\r\n   \r\n   logOut() {\r\n\r\n      var r = window.confirm(\"Are you sure you want to log out?\");\r\n      if(r === true)\r\n        alert(\"You have been logged out successfully...\");\r\n\r\n      const cookies = new Cookies();\r\n      cookies.remove('empid', { path: '/'});\r\n     \r\n      window.location.reload();\r\n      window.location.href = '/first/app';\r\n   }\r\n\r\n   renderModal() {\r\n\r\n      if(this.props.isLogin === true) {\r\n         return(\r\n           <>     \r\n            <Modal isOpen={this.state.isOpen} toggle={this.toggleModal}>\r\n               <ModalHeader>\r\n                     YOUR PROFILE\r\n               </ModalHeader>\r\n               <ModalBody className='p-3'>\r\n                     <dl>\r\n                        <dt>Employee Id</dt> <dd>{this.props.adata[0].emp_id } </dd>\r\n                        <dt>Dept</dt> <dd>{this.props.adata[0].dept}</dd> \r\n                        <dt>Dept Id</dt> <dd>{this.props.adata[0].dept_id}</dd> \r\n                     </dl>\r\n               </ModalBody>\r\n            </Modal>\r\n           </>\r\n         );\r\n      }\r\n      else {\r\n         <div></div>\r\n      }\r\n   }\r\n\r\n   renderNav() {\r\n\r\n      if(this.props.isLogin !== true) {\r\n         \r\n        return(\r\n         <div className='container-fluid'>\r\n            <Navbar expand='md' className='subnav px-3 row'>\r\n               <div className='col-7'>\r\n                  <Nav navbar className='ml-auto'>\r\n                     <NavItem className='px-5'>\r\n                         <span className='px-5'> Hello folks ! </span>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n         \r\n               <div className='col-5 ml-auto'>\r\n                  <Nav navbar className='mx-5'>\r\n                     <NavItem className='px-5 py-2'>\r\n                           You're not logged in.<i className='fa fa-caret'></i>\r\n                     </NavItem>\r\n                     <NavItem className='pt-2'>\r\n                        <NavLink to='/first' className='text-white'>\r\n                           Signin\r\n                        </NavLink>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n            </Navbar>\r\n         </div>\r\n        );\r\n      }\r\n\r\n      else if(this.props.isLogin === true) {\r\n        return(\r\n         <div className='container-fluid'>\r\n            <Navbar expand='md' className='subnav p-2 row'>\r\n               <div className='col-9'>\r\n                  <Nav navbar className='px-5'>\r\n                     <NavItem>\r\n                           <span className='px-5'>Hello { this.props.adata[0].emp_id.toUpperCase() } ! </span>\r\n                     </NavItem>\r\n                  </Nav>\r\n               </div>\r\n\r\n               <div className='col-3 ml-auto'>\r\n                  <Nav className='ml-auto' navbar>\r\n                     <NavItem>\r\n                        <Button color='link' onClick={() => this.toggleModal()}>Profile</Button>\r\n                     </NavItem>\r\n                     <NavItem>\r\n                     <Button color='link' onClick={() => this.logOut()}> Log Out </Button>\r\n                     </NavItem> \r\n                  </Nav>\r\n               </div>\r\n            </Navbar>\r\n         </div>\r\n        );\r\n      }\r\n   }\r\n\r\n   \r\n   render() {\r\n  \r\n        return(\r\n           <div >\r\n            <Navbar dark expand='md' style={{position: 'sticky'}}>\r\n              <div className='container'>\r\n                 <NavbarBrand className='mr-auto' style={{fontFamily:  \"Goudy Bookletter 1911\"}} >\r\n                   <div className='row'>\r\n                     <span className='col-4'>\r\n                        <img src='/assets/thirdeye.png' height='50' weight='51' alt='logo' style={{borderRadius: '30px'}} />\r\n                     </span>\r\n                     <h3 className='col-8 pt-2'>Third Eye</h3>\r\n                  </div>\r\n                 </NavbarBrand>\r\n\r\n                 <Nav navbar>\r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/emp/home'>\r\n                          <span className='fa fa-home fa-md color-white'></span> Home\r\n                      </NavLink>\r\n                    </NavItem>\r\n                 \r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/emp/contact'>\r\n                          <span className='fa fa-envelope fa-md'></span> Contact Us\r\n                      </NavLink>\r\n                    </NavItem>\r\n     \r\n                    <NavItem>\r\n                      <NavLink className='nav-link' to='/emp/about'>\r\n                          <span className='fa fa-info fa-md'></span> About Us\r\n                      </NavLink>\r\n                    </NavItem>\r\n                 </Nav>\r\n               </div>\r\n            </Navbar>\r\n          \r\n         \r\n        \r\n           { this.renderNav() }\r\n        \r\n           { this.renderModal() }\r\n         \r\n         \r\n         </div>\r\n        );\r\n     }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Footer extends Component \r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n     render(){\r\n        \r\n        return(\r\n           <>\r\n             <div className='footer pt-5 text-white'>\r\n                <div className='row justify-content-center'>\r\n                    \r\n                    <div className='col-4 col-sm-2'>\r\n                       <h4>Links</h4>\r\n                       <ul className='list-unstyled text-white'>\r\n                          <li><Link to='' className=''>Home</Link></li>\r\n                          <li><Link to=''>Complaints</Link></li>\r\n                          <li><Link to=''>Contact Us</Link></li>\r\n                          <li><Link to=''>Who are We?</Link></li>\r\n                       </ul>\r\n                    </div>\r\n\r\n                    <div className='col-8 col-sm-4'>\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-sm-4'>\r\n                       <div className='text-center'>\r\n                         <a><i className='fa fa-facebook fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-google fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-twitter fa-lg p-3'></i></a>\r\n                         <a><i className='fa fa-whatsapp fa-lg p-3'></i></a>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row justify-content-center'>\r\n                  <div className='col-auto pt-3'>\r\n                     <p className='text-secondary'>@ Copyright 2021 Third Eye</p>\r\n                  </div>\r\n                </div>\r\n\r\n             </div>\r\n           </>\r\n        );\r\n     }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Loading() {\r\n\r\n   return(\r\n      <div className='col-12 d-flex justify-content-center py-5'>\r\n          <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\r\n          <p>Loading...</p>\r\n      </div>\r\n   );\r\n\r\n}\r\n\r\nexport default Loading;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalHeader, Button, Row, Label, Card, CardBody } from 'reactstrap';\r\n\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { HiStatusOnline } from 'react-icons/hi';\r\nimport { MdFeedback } from 'react-icons/md';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport { AiOutlineFile } from 'react-icons/ai';\r\nimport Loading from '../LoadingComponent';\r\n\r\nimport FileViewer from 'react-file-viewer';\r\nimport Cookies from 'universal-cookie';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\nvar mimetypes = require('mime-types');\r\n\r\n\r\nclass Resolve extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           isOpen: false,\r\n           props: props,\r\n           render: false\r\n        };\r\n    }\r\n\r\n    toggleFileViewer() {\r\n       this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n      const empid = new Cookies().get('empid');\r\n      const deptid = new Cookies().get('deptid');\r\n\r\n      this.props.postEmpReply(empid, deptid, this.state.props.fetched.userid, this.state.props.fetched.issueid, values.comment);\r\n    }\r\n\r\n    componentDidMount() {\r\n      const cookies = new Cookies();\r\n\r\n      //  setTimeout(() => {\r\n      //  this.setState({ render: true })\r\n      //  }, 2000);\r\n      \r\n      setInterval(() => {\r\n        this.props.fetchReply(cookies.get('deptid'))\r\n       }, 100000);\r\n\r\n    }\r\n\r\n\r\n    handleFinal(flag) {\r\n\r\n      var conf = window.confirm(\"Are you sure want to proceed ?\");\r\n      if(!conf)\r\n          return;\r\n        \r\n        if(flag === 'resolve') {\r\n           const cookies = new Cookies();\r\n           this.props.handleResolve(this.state.props.fetched.userid, this.state.props.fetched.issueid, cookies.get('empid'), cookies.get('deptid'));\r\n        } \r\n        else if(flag === 'reject') {\r\n           const cookies = new Cookies();\r\n           this.props.handleIgnore(this.state.props.fetched.userid, this.state.props.fetched.issueid, cookies.get('empid'), cookies.get('deptid'));\r\n        }\r\n        else if(flag === 'suggestion') {\r\n          const cookies = new Cookies();\r\n          this.props.handleSuggested(this.state.props.fetched.userid, this.state.props.fetched.issueid, cookies.get('empid'), cookies.get('deptid'));\r\n       }\r\n\r\n    }\r\n\r\n\r\n    renderLeft(fetch) {\r\n\r\n      return (\r\n        <div className='p-3' style={{height:'550px', borderRight: '2px solid #a3a3a5'}}>\r\n\r\n           <h4># Issue ID {fetch.issueid}</h4> \r\n            <dl className='pt-3'>\r\n              <dt><BiUserCircle /> Raised by </dt> <dd>{fetch.userid}</dd>\r\n              <dt><i className='fa fa-bolt'></i> Subject</dt> <dd>{fetch.sub}</dd>\r\n              <dt><MdFeedback /> Summary </dt>  <dd>{fetch.issue}</dd>\r\n              <dt><FiClock /> Raised on </dt>  \r\n              <dd>{new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                        .format(new Date(fetch.date))} </dd>\r\n              <dt><HiStatusOnline /> Status </dt> \r\n              <dd>\r\n                 { (fetch.status === 'pending')? <i className='fa fa-spinner text-primary'></i>: <i className='fa fa-check-circle text-green'></i> } {' '}\r\n                 <span className='p-2'> { fetch.status.toUpperCase() }  </span>\r\n              </dd>\r\n\r\n              <dt>Proof</dt>\r\n              <dd>\r\n                 <a onClick={() => this.toggleFileViewer()}> <AiOutlineFile /> {fetch.proof.name} </a> <br />\r\n                  <p className='text-primary py-2' onClick={() => this.toggleFileViewer()}>&#62; <u> Tap to Open...</u></p>\r\n\r\n                    \r\n                  <Modal size='lg' isOpen={this.state.isOpen} toggle={() => this.toggleFileViewer()}>\r\n                    <ModalHeader>{fetch.proof.name}</ModalHeader>\r\n                      <ModalBody>\r\n                      <div className='p-2' style={{height: '550px', overflow: 'scroll'}}>\r\n                          <FileViewer \r\n                            fileType={ mimetypes.extension(fetch.proof.type) }\r\n                            filePath={fetch.proof.path}\r\n                          />\r\n                      </div>\r\n                      </ModalBody>\r\n                  </Modal>\r\n              </dd>\r\n            </dl>\r\n\r\n            <div className='p-2' hidden={!this.state.props.reply.closed}>\r\n                <h4><span className='fa fa-check-circle fa-lg'></span> Closed</h4>\r\n            </div>\r\n         </div>\r\n       );\r\n    }\r\n\r\n    renderRight(reply) {\r\n\r\n      return (\r\n         <div className='p-3'>\r\n            <h4>Conversation </h4> \r\n\r\n            <div className='pt-3'>\r\n                <div className='' style={{height: '500px', overflowY: 'scroll'}}>\r\n                  {  \r\n                      reply.convers.map((conv) => {\r\n                        if(conv.id === this.state.props.fetched.userid)\r\n                              return (\r\n                                <div className='my-4'>\r\n                                <Card className='cview1' style={{width: '400px', borderRadius: '20px'}}>\r\n                                   <CardBody>\r\n                                      <div>\r\n                                          <h6 className='text-primary'>{conv.id}</h6> \r\n                                      </div>\r\n                                      <div>\r\n                                         {conv.msg}\r\n                                        <div className='d-flex justify-content-end text-secondary' style={{fontSize: 13}}>\r\n                                          {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                             .format(new Date(conv.date))}</div>\r\n                                      </div>\r\n                                   </CardBody>\r\n                                </Card>\r\n                                </div>\r\n                              );\r\n                         \r\n                         else\r\n                           return (\r\n                             <div className='d-flex justify-content-end my-4'>\r\n                               <Card className='cview1' style={{width: '400px', borderRadius: '20px', backgroundColor:'lightgreen'}}>\r\n                               <CardBody>\r\n                                   <div>\r\n                                       <h6 className='text-success'>{conv.id}</h6> \r\n                                   </div>\r\n                                   <div>\r\n                                      {conv.msg}\r\n                                     <div className='d-flex justify-content-end text-secondary' style={{fontSize: 13}}>\r\n                                       {new Intl.DateTimeFormat('en', {day:'2-digit', month:'short', year:'numeric', hour:'2-digit', minute:'2-digit', second:'2-digit'})\r\n                                         .format(new Date(conv.date))}</div>\r\n                                   </div>\r\n                               </CardBody>\r\n                             </Card>\r\n                            </div>\r\n                           );\r\n                       })  \r\n                 } \r\n\r\n                 <div className='p-2' hidden={!reply.closed}>\r\n                    <h6><span className='fa fa-check-circle fa-lg'></span> Closed Conversation...</h6>\r\n                 </div>\r\n\r\n                </div>\r\n\r\n                <LocalForm className='pt-3' onSubmit={(values) => this.handleSubmit(values)}>\r\n                  <Row>\r\n                    <Label htmlFor='comment' className='py-1'> <h6> Your Reply </h6> </Label>\r\n                    <Control.textarea model='.comment' className='form-control' placeholder=\"Type something...\" \r\n                        rows={5} type='textarea' disabled={reply.closed}\r\n                    />\r\n                  </Row>\r\n                  \r\n                  <div className='pt-2 d-flex justify-content-end'>\r\n                    <Button type='submit' color='primary'>\r\n                      <span className='fa fa-paper-plane'></span> Proceed \r\n                    </Button>\r\n                  </div>\r\n                </LocalForm>\r\n            </div>\r\n         </div>\r\n      );\r\n    }\r\n\r\n    goBack() {\r\n      window.history.back();\r\n    }\r\n\r\n\r\n    render() {\r\n      \r\n     // if(!this.state.render)\r\n        // return (<Loading />);\r\n\r\n      // else\r\n       return(\r\n        <div className='container-fluid p-5' style={{height: 'auto' }}>\r\n        \r\n         <div className='row'>\r\n           <h3 className='col-md-8'> \r\n              <i className='fa fa-angle-left' onClick={() => this.goBack()}></i> {' '}\r\n               {this.state.props.fetched.sub}\r\n           </h3>\r\n           <div className='col-md-4'>\r\n               <Button color='success' className='mx-2' onClick={() => this.handleFinal(\"resolve\")} \r\n                   disabled={this.state.props.reply.closed}>  \r\n                  <span className='fa fa-check-circle'></span> Resolve\r\n                </Button>\r\n               <Button color='danger' className='mx-2' onClick={() => this.handleFinal(\"reject\")}\r\n                   disabled={this.state.props.reply.closed}>   \r\n                  <span className='fa fa-trash'></span> Reject\r\n               </Button>\r\n               <Button color='primary' className='mx-2' onClick={() => this.handleFinal(\"suggestion\")}\r\n                   disabled={this.state.props.reply.closed}>   \r\n                  <span className='fa fa-check'></span> Suggestion\r\n               </Button>\r\n           </div>\r\n         </div> <hr/>\r\n\r\n          <div className='row row-content'>\r\n              <div className='col-12 col-md-5'>\r\n                  { this.renderLeft(this.state.props.fetched) }\r\n              </div>\r\n              <div className='col-12 col-md-7'>\r\n                  { this.renderRight(this.state.props.reply) }\r\n              </div>\r\n          </div>\r\n\r\n        </div> \r\n       );\r\n   }\r\n}\r\n\r\nexport default Resolve;","import React, { Component } from 'react';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport About from '../AboutComponent';\r\nimport Contact from '../ContactComponent';\r\nimport Home2 from './Home2Component';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Resolve from './ResolveComponent';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { fetchEmpProfile } from '../../redux/ActionCreator';\r\nimport { empDash } from '../../redux/ActionCreator2';\r\nimport { fetchReceived, fetchEmpResolved, handleSuggested, postEmpReply, \r\n         fetchEmpReply, handleIgnore, handleResolve } from '../../redux/ActionCreator3';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n       profile: state.profile,\r\n       received: state.received,\r\n       empdash: state.empdash,\r\n       empresolved: state.empresolved,\r\n       reply: state.empreply\r\n     };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n     \r\n    fetchEmpProfile: (empid) => { dispatch(fetchEmpProfile(empid)) },\r\n\r\n    fetchReceived: (deptid) => { dispatch(fetchReceived(deptid)) },\r\n\r\n    fetchEmpResolved: (deptid) => { dispatch(fetchEmpResolved(deptid)) },\r\n\r\n    empDash: (deptid) => { dispatch(empDash(deptid)) },\r\n\r\n    postEmpReply: (empid, deptid, userid, issueid, msg) => {  dispatch(postEmpReply(empid, deptid, userid, issueid, msg)) },\r\n\r\n    fetchEmpReply: (deptid) => { dispatch(fetchEmpReply(deptid)) },\r\n\r\n    handleResolve: (uid, issid, empid, did) => {dispatch(handleResolve(uid, issid, empid, did)) },\r\n\r\n    handleIgnore: (uid, issid, empid, did) => { dispatch(handleIgnore(uid, issid, empid, did)) },\r\n\r\n    handleSuggested: (uid, issid, empid, did) => { dispatch(handleSuggested(uid, issid, empid, did)) },\r\n\r\n});\r\n\r\nclass Main3 extends Component \r\n{\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   componentDidMount() {\r\n      const cookies = new Cookies();\r\n\r\n      this.props.fetchEmpProfile(cookies.get('empid'));\r\n      this.props.empDash(cookies.get('deptid'));\r\n      this.props.fetchReceived(cookies.get('deptid'));\r\n      this.props.fetchEmpResolved(cookies.get('deptid'));\r\n      this.props.fetchEmpReply(cookies.get('deptid'));\r\n   }\r\n\r\n\r\n   render(){\r\n\r\n       const Homepage = () => {\r\n           return(\r\n              <Home2\r\n                  isErr = { this.props.empdash.isErr }\r\n                  dash = { this.props.empdash.data }\r\n                  isReceivedErr = {this.props.received.isErr}\r\n                  receivedErrMess = {this.props.received.errMess}\r\n                  receivedData = {this.props.received.data}\r\n                  isResolvedErr = {this.props.empresolved.isErr}\r\n                  resolvedErrMess = {this.props.empresolved.errMess}\r\n                  resolvedData = {this.props.empresolved.data}\r\n              />\r\n           );\r\n       };\r\n\r\n       const ResolvePage = ({match}) => {\r\n           return(\r\n              <Resolve \r\n                 fetched={ this.props.received.data.filter((issue) => issue.issueid === match.params.issueid)[0] }\r\n                 reply = { this.props.reply.data.filter((re) => re.issueid === match.params.issueid)[0] }\r\n                 postEmpReply = { this.props.postEmpReply } \r\n                 fetchReply = { this.props.fetchEmpReply }\r\n                 handleResolve = { this.props.handleResolve }\r\n                 handleIgnore = { this.props.handleIgnore }\r\n                 handleSuggested = { this.props.handleSuggested }\r\n              />\r\n           );\r\n       };\r\n \r\n       return(\r\n         <div className=''>\r\n              <Header \r\n                  isLogin = {this.props.profile.isLogin}\r\n                  adata={this.props.profile.data}\r\n                  errMess={this.props.profile.errMess}\r\n              />\r\n                \r\n                <Switch>\r\n                  <Route path='/emp/home' component= {Homepage} />\r\n                  <Route  path='/emp/contact' component={() => <Contact /> } />\r\n                  <Route  path='/emp/about' component={() => <About /> } />\r\n                  <Route exact path='/emp/:issueid' component={ResolvePage} />\r\n                  <Redirect to='/emp/home' />\r\n                </Switch>\r\n\r\n              <Footer />\r\n         </div>\r\n       );\r\n   };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Main3));","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const UserLogin = (state = {\r\n     isLogin: false,\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n    \r\n     switch(action.type)\r\n     {\r\n         case ActionTypes.USER_LOGIN_SUCCESS:\r\n            return {...state, isLogin: true, errMess: null, data: action.payload };\r\n        \r\n         case ActionTypes.USER_LOGIN_FAILED:\r\n            return {...state, isLogin: false, errMess: action.payload, data:[] };\r\n\r\n         default: \r\n            return state;\r\n     }\r\n};","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const AdminLogin = (state = {\r\n     isLogin: false,\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n    \r\n     switch(action.type)\r\n     {\r\n         case ActionTypes.ADMIN_LOGIN_SUCCESS:\r\n            return {...state, isLogin: true, errMess: null, data: action.payload };\r\n        \r\n         case ActionTypes.ADMIN_LOGIN_FAILED:\r\n            return {...state, isLogin: false, errMess: action.payload, data:[] };\r\n\r\n         default: \r\n            return state;\r\n     }\r\n};","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const UserRegister = (state = {\r\n     isRegister: false,\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n   \r\n     switch(action.type)\r\n     {\r\n         case ActionTypes.REGISTER_SUCCESS:\r\n            return{...state, isRegister: true, errMess:null, data: [action.payload]};\r\n\r\n         case ActionTypes.REGISTER_SUCCESS:\r\n            return{...state, isRegister: false, errMess: action.payload, data: []};\r\n\r\n         default:\r\n            return state;\r\n     }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\n\r\nexport const Departments = (state = {\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n    \r\n     switch(action.type)\r\n     {\r\n         case ActionTypes.ADD_DEPARTMENTS:\r\n            return {...state, errMess: null, data: action.payload };\r\n\r\n         default: \r\n            return state;\r\n     }\r\n};","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Profile = (state = {\r\n    isLogin: false,\r\n    errMess: null,\r\n    data: []\r\n}, action) => {\r\n    \r\n    switch(action.type) \r\n    {\r\n        case ActionTypes.ADD_PROFILE:\r\n            return {...state, isLogin: true, errMess: null, data: action.payload };\r\n        \r\n        case ActionTypes.ADD_PROFILE_ERR:\r\n            return {...state, isLogin: false, errMess: action.payload, data: [] };\r\n    \r\n        case ActionTypes.ADD_EMP_PROFILE:\r\n            return {...state, isLogin: true, errMess: null, data: action.payload };\r\n        \r\n        case ActionTypes.ADD_EMP_PROFILE_ERR:\r\n            return {...state, isLogin: false, errMess: action.payload, data: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const UserDash = (state = {\r\n     isErr: false,\r\n     data: []\r\n}, action) => {\r\n    \r\n     switch(action.type) \r\n     {\r\n         case ActionTypes.ADD_USER_DASH:\r\n            return {...state, isErr: false, data: action.payload };\r\n\r\n         default:\r\n            return state;\r\n     }\r\n}\r\n\r\nexport const EmpDash = (state = {\r\n   isErr: false,\r\n   data: []\r\n}, action) => {\r\n  \r\n   switch(action.type) \r\n   {\r\n       case ActionTypes.ADD_EMP_DASH:\r\n          return {...state, isErr: false, data: action.payload };\r\n\r\n       default:\r\n          return state;\r\n   }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Raised = (state = {\r\n     isErr: false,\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n     \r\n    switch(action.type) \r\n    {\r\n        case ActionTypes.ADD_RAISED:\r\n           return{...state, isErr: false, errMess: null, data: action.payload};\r\n        \r\n        case ActionTypes.ERR_RAISED:\r\n           return{...state, isErr: true, errMess: action.payload, data: []};\r\n        \r\n        default: \r\n           return state;\r\n    }\r\n}\r\n\r\nexport const Received = (state = {\r\n   isErr: false,\r\n   errMess: null,\r\n   data: []\r\n}, action) => {\r\n   \r\n  switch(action.type) \r\n  {\r\n      case ActionTypes.ADD_RECEIVED:\r\n         return{...state, isErr: false, errMess: null, data: action.payload};\r\n      \r\n      case ActionTypes.ERR_RECEIVED:\r\n         return{...state, isErr: true, errMess: action.payload, data: []};\r\n      \r\n      default: \r\n         return state;\r\n  }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Pending = (state = {\r\n    isErr: false,\r\n    errMess: null,\r\n    data: []\r\n\r\n}, action) => {\r\n    \r\n   switch(action.type) \r\n   {\r\n       case ActionTypes.ADD_PENDING:\r\n          return{...state, isErr: false, errMess: null, data: action.payload};\r\n       \r\n       case ActionTypes.ERR_PENDING:\r\n          return{...state, isErr: true, errMess: action.payload, data: []};\r\n       \r\n       default: \r\n          return state;\r\n   }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const Resolved = (state = {\r\n    isErr: false,\r\n    errMess: null,\r\n    data: []\r\n\r\n}, action) => {\r\n    \r\n   switch(action.type) \r\n   {\r\n       case ActionTypes.ADD_RESOLVED:\r\n          return{...state, isErr: false, errMess: null, data: action.payload};\r\n       \r\n       case ActionTypes.ERR_RESOLVED:\r\n          return{...state, isErr: true, errMess: action.payload, data: []};\r\n       \r\n       default: \r\n          return state;\r\n   }\r\n}\r\n\r\nexport const EmpResolved = (state = {\r\n   isErr: false,\r\n   errMess: null,\r\n   data: []\r\n\r\n}, action) => {\r\n   \r\n  switch(action.type) \r\n  {\r\n      case ActionTypes.ADD_EMP_RESOLVED:\r\n         return{...state, isErr: false, errMess: null, data: action.payload};\r\n      \r\n      case ActionTypes.ERR_EMP_RESOLVED:\r\n         return{...state, isErr: true, errMess: action.payload, data: []};\r\n      \r\n      default: \r\n         return state;\r\n  }\r\n}","import * as ActionTypes from '../ActionTypes';\r\n\r\nexport const UserReply = (state = {\r\n     isErr: false,\r\n     errMess: null,\r\n     data: []\r\n}, action) => {\r\n     \r\n    switch(action.type) \r\n    {   \r\n        case ActionTypes.ADD_USER_REPLY:\r\n           return{...state, isErr: false, errMess: null, data: action.payload};\r\n        \r\n        default: \r\n           return state;\r\n    }\r\n}\r\n\r\nexport const EmpReply = (state = {\r\n    isErr: false,\r\n    errMess: null,\r\n    data: []\r\n}, action) => {\r\n    \r\n   switch(action.type) \r\n   {   \r\n       case ActionTypes.ADD_EMP_REPLY:\r\n          return{...state, isErr: false, errMess: null, data: action.payload};\r\n       \r\n       default: \r\n          return state;\r\n   }\r\n}\r\n\r\n","import React, { Component } from 'react';\n\nimport Main from './components/Authn/MainComponent'\nimport Main2 from './components/User/Main2Component';\nimport Main3 from './components/Employee/Main3Component';\n\nimport './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { ConfigStore } from './redux/configStore';\n\nconst store = ConfigStore();\n\n\nclass App extends Component \n{\n    constructor(props){\n       super(props);\n    }\n\n    render() {\n      \n      return(\n          <Provider store={store}>\n             <BrowserRouter>\n               <div className=\"\">\n                  <Switch>\n                     <Route path='/first' component={() => <Main /> } />  \n                     <Route path='/user' component={() => <Main2 /> } />  \n                     <Route path='/emp' component={() => <Main3 /> } />\n                     <Redirect to='/first' />\n                  </Switch>\n               </div>\n             </BrowserRouter>\n          </Provider>\n      );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n//import logger from 'redux-logger';\r\n\r\nimport { UserLogin } from './reducers/userlogin';\r\nimport { AdminLogin } from './reducers/adminlogin';\r\nimport { UserRegister } from './reducers/userregister';\r\nimport { Departments } from './reducers/departments';\r\nimport { Profile } from './reducers/profile';\r\nimport { UserDash, EmpDash } from './reducers/dashboard';\r\nimport { Raised, Received } from './reducers/raised';\r\nimport { Pending } from './reducers/pending';\r\nimport { Resolved, EmpResolved } from './reducers/resolved';\r\nimport { UserReply, EmpReply } from './reducers/reply';\r\n\r\nexport const ConfigStore = () => {\r\n     \r\n      const store = createStore(\r\n          combineReducers({\r\n              userlogin: UserLogin,\r\n              adminlogin: AdminLogin,\r\n              userregister: UserRegister,\r\n              departments: Departments,\r\n              profile: Profile,\r\n              userdash: UserDash,\r\n              empdash: EmpDash,\r\n              raised: Raised,\r\n              pending: Pending,\r\n              resolved: Resolved,\r\n              received: Received, \r\n              empresolved: EmpResolved,\r\n              userreply: UserReply,\r\n              empreply: EmpReply\r\n          }),\r\n\r\n          applyMiddleware(thunk)\r\n      );\r\n\r\n      return store;\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'jquery/dist/jquery.min.js';\n//import 'popper.js/dist/popper.min.js';\nimport '@popperjs\\\\core/dist/umd/popper.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"file-viewer\";\nimport \"mime/Mime.js\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}